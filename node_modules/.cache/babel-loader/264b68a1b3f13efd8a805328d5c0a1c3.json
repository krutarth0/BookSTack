{"ast":null,"code":"import _classCallCheck from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\src\\\\components\\\\BookList.js\";\nimport React, { Component } from 'react';\nimport { graphql } from 'react-apollo';\nimport { getBooksQuery } from '../queries/queries'; // components\n\nimport BookDetails from './BookDetails';\n\nvar BookList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BookList, _Component);\n\n  function BookList(props) {\n    var _this;\n\n    _classCallCheck(this, BookList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BookList).call(this, props));\n    _this.state = {\n      selected: null\n    };\n    return _this;\n  }\n\n  _createClass(BookList, [{\n    key: \"displayBooks\",\n    value: function displayBooks() {\n      var _this2 = this;\n\n      var data = this.props.data;\n\n      try {\n        if (data.loading) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 18\n            },\n            __self: this\n          }, \"Loading books...\");\n        } else {\n          return data.books.map(function (book) {\n            return React.createElement(\"li\", {\n              key: book.id,\n              onClick: function onClick(e) {\n                return _this2.setState({\n                  selected: book.id\n                });\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 21\n              },\n              __self: this\n            }, book.title);\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        id: \"book-list\",\n        className: \"site-font\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, this.displayBooks(), React.createElement(BookDetails, {\n        bookId: this.state.selected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return BookList;\n}(Component);\n\nexport default graphql(getBooksQuery, {\n  options: function options(props) {\n    return {\n      variables: {\n        search: props.search,\n        howmany: 25\n      }\n    };\n  }\n})(BookList);","map":{"version":3,"sources":["D:\\Projects\\BookStack\\BookSTack\\src\\components\\BookList.js"],"names":["React","Component","graphql","getBooksQuery","BookDetails","BookList","props","state","selected","data","loading","books","map","book","id","e","setState","title","err","console","log","displayBooks","options","variables","search","howmany"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,aAAT,QAA8B,oBAA9B,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;;IAEMC,Q;;;;;AACF,oBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAFc;AAKjB;;;;mCACa;AAAA;;AACV,UAAIC,IAAI,GAAG,KAAKH,KAAL,CAAWG,IAAtB;;AACA,UAAG;AACC,YAAGA,IAAI,CAACC,OAAR,EAAgB;AAAC,iBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAR;AAAuC,SAAxD,MACO;AACA,iBAAOD,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAe,UAAAC,IAAI,EAAI;AACzB,mBAAO;AAAI,cAAA,GAAG,EAAGA,IAAI,CAACC,EAAf;AAAoB,cAAA,OAAO,EAAG,iBAACC,CAAD;AAAA,uBAAO,MAAI,CAACC,QAAL,CAAc;AAAER,kBAAAA,QAAQ,EAAEK,IAAI,CAACC;AAAjB,iBAAd,CAAP;AAAA,eAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA8ED,IAAI,CAACI,KAAnF,CAAP;AACH,WAFK,CAAP;AAGF;AACJ,OAPL,CAQA,OAAMC,GAAN,EAAU;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAkB;AAEhC;;;6BACO;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,EAAE,EAAC,WAAP;AAAmB,QAAA,SAAS,EAAC,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM,KAAKG,YAAL,EADN,EAEI,oBAAC,WAAD;AAAa,QAAA,MAAM,EAAE,KAAKd,KAAL,CAAWC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,CADJ;AASH;;;;EA9BkBP,S;;AAiCvB,eAAeC,OAAO,CAACC,aAAD,EAAe;AACnCmB,EAAAA,OAAO,EAAE,iBAAChB,KAAD,EAAS;AAChB,WAAM;AACFiB,MAAAA,SAAS,EAAC;AACRC,QAAAA,MAAM,EAAClB,KAAK,CAACkB,MADL;AAERC,QAAAA,OAAO,EAAE;AAFD;AADR,KAAN;AAMD;AARkC,CAAf,CAAP,CASZpB,QATY,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { graphql } from 'react-apollo';\r\nimport { getBooksQuery } from '../queries/queries';\r\n\r\n// components\r\nimport BookDetails from './BookDetails';\r\n\r\nclass BookList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            selected: null\r\n        }\r\n    }\r\n    displayBooks(){\r\n        var data = this.props.data;\r\n        try{\r\n            if(data.loading){return( <div>Loading books...</div> );}\r\n              else {\r\n                   return data.books.map(book => {\r\n                        return(<li key={ book.id } onClick={ (e) => this.setState({ selected: book.id }) }>{ book.title }</li>);\r\n                    })\r\n                }\r\n            }\r\n        catch(err){console.log(err);}\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <ul id=\"book-list\" className=\"site-font\">\r\n                    { this.displayBooks() }\r\n                    <BookDetails bookId={this.state.selected}/>\r\n                </ul>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default graphql(getBooksQuery,{\r\n  options: (props)=>{\r\n    return{\r\n        variables:{\r\n          search:props.search,\r\n          howmany: 25\r\n        }\r\n    }\r\n  }\r\n})(BookList);\r\n"]},"metadata":{},"sourceType":"module"}