{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\barot\\\\Documents\\\\GitHub\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\barot\\\\Documents\\\\GitHub\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\barot\\\\Documents\\\\GitHub\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\barot\\\\Documents\\\\GitHub\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\barot\\\\Documents\\\\GitHub\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\barot\\\\Documents\\\\GitHub\\\\BookSTack\\\\src\\\\components\\\\BookList.js\";\nimport React, { Component } from 'react';\nimport { graphql } from 'react-apollo';\nimport { getBooksQuery } from '../queries/queries';\nimport Cards from \"./body/card\";\nimport \"./css/cardGrid.css\";\nimport BookDetails from './BookDetails';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport { data } from './body/dummyData';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing.unit * 2,\n      textAlign: 'center',\n      color: theme.palette.text.secondary\n    }\n  };\n};\n\nvar BookList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BookList, _Component);\n\n  function BookList(props) {\n    var _this;\n\n    _classCallCheck(this, BookList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BookList).call(this, props));\n    _this.state = {\n      selected: null\n    };\n    return _this;\n  }\n\n  _createClass(BookList, [{\n    key: \"displayBooks\",\n    value: function displayBooks() {\n      var data2 = this.props.data;\n      var loading = false;\n\n      try {\n        if (loading) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, \"Loading books...\");\n        } else {\n          return React.createElement(Grid, {\n            container: true,\n            spacing: 40,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, data.map(function (post) {\n            return React.createElement(Grid, {\n              item: true,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 39\n              },\n              __self: this\n            }, React.createElement(Cards, {\n              id: book.id,\n              title: book.title,\n              description: book.description,\n              ts: book.textSnippet,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 40\n              },\n              __self: this\n            }));\n          }));\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.displayBooks());\n    }\n  }]);\n\n  return BookList;\n}(Component);\n\nexport default graphql(getBooksQuery, {\n  options: function options(props) {\n    return {\n      variables: {\n        search: props.search,\n        howmany: 25\n      }\n    };\n  }\n})(withStyles(styles)(BookList));","map":{"version":3,"sources":["C:\\Users\\barot\\Documents\\GitHub\\BookSTack\\src\\components\\BookList.js"],"names":["React","Component","graphql","getBooksQuery","Cards","BookDetails","Grid","withStyles","data","styles","theme","root","flexGrow","paper","padding","spacing","unit","textAlign","color","palette","text","secondary","BookList","props","state","selected","data2","loading","map","post","book","id","title","description","textSnippet","err","console","log","displayBooks","options","variables","search","howmany"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACvBC,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAE;AADN,KADiB;AAIvBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAcC,IAAd,GAAqB,CADzB;AAELC,MAAAA,SAAS,EAAE,QAFN;AAGLC,MAAAA,KAAK,EAAER,KAAK,CAACS,OAAN,CAAcC,IAAd,CAAmBC;AAHrB;AAJgB,GAAL;AAAA,CAApB;;IAYMC,Q;;;;;AACF,oBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAFc;AAKjB;;;;mCACa;AACV,UAAIC,KAAK,GAAG,KAAKH,KAAL,CAAWf,IAAvB;AACA,UAAMmB,OAAO,GAAG,KAAhB;;AACA,UAAG;AACC,YAAGA,OAAH,EAAW;AAAC,iBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAR;AAAuC,SAAnD,MACO;AACA,iBACE,oBAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACCnB,IAAI,CAACoB,GAAL,CAAS,UAAAC,IAAI,EAAI;AACf,mBACE,oBAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACA,oBAAC,KAAD;AACE,cAAA,EAAE,EAAEC,IAAI,CAACC,EADX;AAEE,cAAA,KAAK,EAAED,IAAI,CAACE,KAFd;AAGE,cAAA,WAAW,EAAEF,IAAI,CAACG,WAHpB;AAIE,cAAA,EAAE,EAAEH,IAAI,CAACI,WAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,CADF;AAUH,WAXC,CADD,CADF;AAgBF;AACJ,OApBL,CAqBA,OAAMC,GAAN,EAAU;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAkB;AAEhC;;;6BACO;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM,KAAKG,YAAL,EADN,CADJ;AAKH;;;;EAxCkBrC,S;;AA2CvB,eAAeC,OAAO,CAACC,aAAD,EAAe;AACnCoC,EAAAA,OAAO,EAAE,iBAAChB,KAAD,EAAS;AAChB,WAAM;AACFiB,MAAAA,SAAS,EAAC;AACRC,QAAAA,MAAM,EAAClB,KAAK,CAACkB,MADL;AAERC,QAAAA,OAAO,EAAE;AAFD;AADR,KAAN;AAMD;AARkC,CAAf,CAAP,CASZnC,UAAU,CAACE,MAAD,CAAV,CAAmBa,QAAnB,CATY,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { graphql } from 'react-apollo';\r\nimport { getBooksQuery } from '../queries/queries';\r\nimport Cards from \"./body/card\"\r\nimport \"./css/cardGrid.css\"\r\nimport BookDetails from './BookDetails';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport {data} from './body/dummyData'\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing.unit * 2,\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n});\r\n\r\n\r\nclass BookList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            selected: null\r\n        }\r\n    }\r\n    displayBooks(){\r\n        var data2 = this.props.data;\r\n        const loading = false\r\n        try{\r\n            if(loading){return( <div>Loading books...</div> );}\r\n              else {\r\n                   return (\r\n                     <Grid container spacing={40}>\r\n                     {data.map(post => {\r\n                        return(\r\n                          <Grid item>\r\n                          <Cards\r\n                            id={book.id}\r\n                            title={book.title}\r\n                            description={book.description}\r\n                            ts={book.textSnippet}\r\n                          />\r\n                          </Grid>\r\n                        );\r\n                    })}\r\n                    </Grid>\r\n                  )\r\n                }\r\n            }\r\n        catch(err){console.log(err);}\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                { this.displayBooks() }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default graphql(getBooksQuery,{\r\n  options: (props)=>{\r\n    return{\r\n        variables:{\r\n          search:props.search,\r\n          howmany: 25\r\n        }\r\n    }\r\n  }\r\n})(withStyles(styles)(BookList));\r\n"]},"metadata":{},"sourceType":"module"}