{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\nvar _temp,\n    _jsxFileName = \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\src\\\\auth\\\\octa\\\\login.js\";\n\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport SigninWidget from './signWidget';\nimport { withAuth } from '@okta/okta-react';\nimport FLogin from '../login';\nexport default withAuth((_temp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _this.onSuccess = function (res) {\n      if (res.status === 'SUCCESS') {\n        return _this.props.auth.redirect({\n          sessionToken: res.session.token\n        });\n      } else {// The user can be in another authentication state that requires further action.\n        // For more information about these states, see:\n        //   https://github.com/okta/okta-signin-widget#rendereloptions-success-error\n      }\n    };\n\n    _this.onError = function (err) {\n      console.log('error logging in', err);\n    };\n\n    _this.state = {\n      authenticated: null\n    };\n\n    _this.checkAuthentication();\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"checkAuthentication\",\n    value: function () {\n      var _checkAuthentication = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var authenticated;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.props.auth.isAuthenticated();\n\n              case 2:\n                authenticated = _context.sent;\n\n                if (authenticated !== this.state.authenticated) {\n                  this.setState({\n                    authenticated: authenticated\n                  });\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function checkAuthentication() {\n        return _checkAuthentication.apply(this, arguments);\n      }\n\n      return checkAuthentication;\n    }()\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.checkAuthentication();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.authenticated === null) return null;\n      return this.state.authenticated ? React.createElement(Redirect, {\n        to: {\n          pathname: '/'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }) : React.createElement(SigninWidget, {\n        baseUrl: this.props.baseUrl,\n        onSuccess: this.onSuccess,\n        onError: this.onError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Login;\n}(Component), _temp));","map":{"version":3,"sources":["D:\\Projects\\BookStack\\BookSTack\\src\\auth\\octa\\login.js"],"names":["React","Component","Redirect","SigninWidget","withAuth","FLogin","props","onSuccess","res","status","auth","redirect","sessionToken","session","token","onError","err","console","log","state","authenticated","checkAuthentication","isAuthenticated","setState","pathname","baseUrl"],"mappings":";;;;;;;;;;;AAAE,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACD,OAAOC,MAAP,MAAmB,UAAnB;AAEC,eAAeD,QAAQ;AAAA;AAAA;AAAA;;AACrB,iBAAYE,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;;AADiB,UAmBnBC,SAnBmB,GAmBR,UAACC,GAAD,EAAQ;AACjB,UAAIA,GAAG,CAACC,MAAJ,KAAe,SAAnB,EAA8B;AAC5B,eAAO,MAAKH,KAAL,CAAWI,IAAX,CAAgBC,QAAhB,CAAyB;AAC9BC,UAAAA,YAAY,EAAEJ,GAAG,CAACK,OAAJ,CAAYC;AADI,SAAzB,CAAP;AAGF,OAJA,MAIM,CACN;AACA;AACA;AACC;AACF,KA7BkB;;AAAA,UA+BnBC,OA/BmB,GA+BX,UAACC,GAAD,EAAQ;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,GAAhC;AACD,KAjCkB;;AAEjB,UAAKG,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE;AADJ,KAAb;;AAGA,UAAKC,mBAAL;;AALiB;AAMlB;;AAPoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAUS,KAAKf,KAAL,CAAWI,IAAX,CAAgBY,eAAhB,EAVT;;AAAA;AAUbF,gBAAAA,aAVa;;AAWnB,oBAAIA,aAAa,KAAK,KAAKD,KAAL,CAAWC,aAAjC,EAAgD;AAC9C,uBAAKG,QAAL,CAAc;AAAEH,oBAAAA,aAAa,EAAbA;AAAF,mBAAd;AACD;;AAbkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yCAgBA;AACnB,WAAKC,mBAAL;AACD;AAlBoB;AAAA;AAAA,6BAoCZ;AACP,UAAI,KAAKF,KAAL,CAAWC,aAAX,KAA6B,IAAjC,EAAuC,OAAO,IAAP;AACvC,aAAO,KAAKD,KAAL,CAAWC,aAAX,GACL,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAEI,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,GAEL,oBAAC,YAAD;AACE,QAAA,OAAO,EAAE,KAAKlB,KAAL,CAAWmB,OADtB;AAEE,QAAA,SAAS,EAAE,KAAKlB,SAFlB;AAGE,QAAA,OAAO,EAAE,KAAKQ,OAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF;AAMD;AA5CoB;;AAAA;AAAA,EAAqBd,SAArB,UAAvB","sourcesContent":["  import React, { Component } from 'react';\r\n  import { Redirect } from 'react-router-dom';\r\n  import SigninWidget from './signWidget';\r\n  import { withAuth } from '@okta/okta-react';\r\n import FLogin from '../login'\r\n\r\n  export default withAuth(class Login extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        authenticated: null\r\n      };\r\n      this.checkAuthentication();\r\n    }\r\n\r\n    async checkAuthentication() {\r\n      const authenticated = await this.props.auth.isAuthenticated();\r\n      if (authenticated !== this.state.authenticated) {\r\n        this.setState({ authenticated });\r\n      }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n      this.checkAuthentication();\r\n    }\r\n\r\n    onSuccess= (res)=> {\r\n      if (res.status === 'SUCCESS') {\r\n        return this.props.auth.redirect({\r\n          sessionToken: res.session.token\r\n        });\r\n     } else {\r\n      // The user can be in another authentication state that requires further action.\r\n      // For more information about these states, see:\r\n      //   https://github.com/okta/okta-signin-widget#rendereloptions-success-error\r\n      }\r\n    }\r\n\r\n    onError=(err)=> {\r\n      console.log('error logging in', err);\r\n    }\r\n\r\n    render() {\r\n      if (this.state.authenticated === null) return null;\r\n      return this.state.authenticated ?\r\n        <Redirect to={{ pathname: '/' }}/> :\r\n        <SigninWidget\r\n          baseUrl={this.props.baseUrl}\r\n          onSuccess={this.onSuccess}\r\n          onError={this.onError}/>;\r\n    }\r\n  });\r\n"]},"metadata":{},"sourceType":"module"}