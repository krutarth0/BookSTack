{"ast":null,"code":"import _classCallCheck from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\src\\\\auth\\\\login.js\";\nimport React from \"react\";\nimport firebase from \"firebase\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\"; //styles\n\nimport 'antd/dist/antd.css';\nimport { Form, Icon, Input, Button, Checkbox } from 'antd'; //auth\n\nvar config = {\n  apiKey: \"AIzaSyBdD-dZnTara6z3jjKOENeqWQJz8Lk53jQ\",\n  authDomain: \"fir-auth-b1ee0.firebaseapp.com\"\n};\nfirebase.initializeApp(config);\n\nvar FLogin =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FLogin, _React$Component);\n\n  function FLogin() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FLogin);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FLogin)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isSignedIn: false\n    };\n    _this.uiConfig = {\n      signInFlow: \"popup\",\n      signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID, firebase.auth.EmailAuthProvider.PROVIDER_ID],\n      callbacks: {\n        signInSuccess: function signInSuccess() {\n          return false;\n        }\n      }\n    };\n\n    _this.componentDidMount = function () {\n      firebase.auth().onAuthStateChanged(function (user) {\n        _this.setState({\n          isSignedIn: !!user\n        });\n\n        console.log(\"user\", user);\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(FLogin, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"modal-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        class: \"modal-title\",\n        id: \"exampleModalCenterTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Modal title\"), React.createElement(\"button\", {\n        type: \"button\",\n        class: \"close\",\n        \"data-dismiss\": \"modal\",\n        \"aria-label\": \"Close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"\\xD7\"))), React.createElement(\"div\", {\n        class: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        className: \"login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, getFieldDecorator('userName', {\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }),\n        placeholder: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your Password!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, getFieldDecorator('remember', {\n        valuePropName: 'checked',\n        initialValue: true\n      })(React.createElement(Checkbox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Remember me\")), React.createElement(\"a\", {\n        className: \"login-form-forgot\",\n        href: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Forgot password\"), React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"login-form-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Log in\"), \"Or \", React.createElement(\"a\", {\n        href: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"register now!\")))), React.createElement(\"div\", {\n        class: \"modal-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-secondary\",\n        \"data-dismiss\": \"modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Close\"), React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Save changes\")));\n    }\n  }]);\n\n  return FLogin;\n}(React.Component);\n\nvar WrappedLoginForm = Form.create({\n  name: 'normal_login'\n})(FLogin);\nexport default FLogin;","map":{"version":3,"sources":["D:\\Projects\\BookStack\\BookSTack\\src\\auth\\login.js"],"names":["React","firebase","StyledFirebaseAuth","Form","Icon","Input","Button","Checkbox","config","apiKey","authDomain","initializeApp","FLogin","state","isSignedIn","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","EmailAuthProvider","callbacks","signInSuccess","componentDidMount","onAuthStateChanged","user","setState","console","log","handleSubmit","e","preventDefault","props","form","validateFields","err","values","getFieldDecorator","rules","required","message","color","valuePropName","initialValue","Component","WrappedLoginForm","create","name"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport firebase from \"firebase\"\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\"\r\n\r\n//styles\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n  Form, Icon, Input, Button, Checkbox,\r\n} from 'antd';\r\n\r\n\r\n//auth\r\nvar config = {\r\n apiKey: \"AIzaSyBdD-dZnTara6z3jjKOENeqWQJz8Lk53jQ\",\r\n authDomain: \"fir-auth-b1ee0.firebaseapp.com\",\r\n};\r\nfirebase.initializeApp(config);\r\n\r\n\r\nclass FLogin extends React.Component{\r\n\r\nstate = {\r\n  isSignedIn: false\r\n}\r\nuiConfig = {\r\n          signInFlow: \"popup\",\r\n          signInOptions: [\r\n            firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n            firebase.auth.EmailAuthProvider.PROVIDER_ID\r\n          ],\r\n          callbacks: {\r\n            signInSuccess: () => false\r\n          }\r\n        }\r\n\r\ncomponentDidMount = () => {\r\n          firebase.auth().onAuthStateChanged(user => {\r\n            this.setState({ isSignedIn: !!user })\r\n            console.log(\"user\", user)\r\n          })\r\n        }\r\n\r\n\r\nhandleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n          if (!err) {\r\n            console.log('Received values of form: ', values);\r\n          }\r\n        });\r\n      }\r\n\r\n    render(){\r\n       const { getFieldDecorator } = this.props.form;\r\n      return(\r\n        <React.Fragment>\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"exampleModalCenterTitle\">Modal title</h5>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n                            <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                                 <Form.Item>\r\n                                   {getFieldDecorator('userName', {\r\n                                     rules: [{ required: true, message: 'Please input your username!' }],\r\n                                   })(\r\n                                     <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\r\n                                   )}\r\n                                 </Form.Item>\r\n                                 <Form.Item>\r\n                                   {getFieldDecorator('password', {\r\n                                     rules: [{ required: true, message: 'Please input your Password!' }],\r\n                                   })(\r\n                                     <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\r\n                                   )}\r\n                                 </Form.Item>\r\n                                 <Form.Item>\r\n                                   {getFieldDecorator('remember', {\r\n                                     valuePropName: 'checked',\r\n                                     initialValue: true,\r\n                                   })(\r\n                                     <Checkbox>Remember me</Checkbox>\r\n                                   )}\r\n                                   <a className=\"login-form-forgot\" href=\"\">Forgot password</a>\r\n                                   <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                     Log in\r\n                                   </Button>\r\n                                   Or <a href=\"\">register now!</a>\r\n                                 </Form.Item>\r\n                          </Form>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n          <button type=\"button\" class=\"btn btn-primary\">Save changes</button>\r\n        </div>\r\n      </React.Fragment>\r\n\r\n    );\r\n    }\r\n\r\n}\r\n\r\nconst WrappedLoginForm = Form.create({ name: 'normal_login' })(FLogin);\r\n\r\nexport default FLogin;\r\n"]},"metadata":{},"sourceType":"module"}