{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\barot\\\\Documents\\\\GitHub\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\barot\\\\Documents\\\\GitHub\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\barot\\\\Documents\\\\GitHub\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\barot\\\\Documents\\\\GitHub\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\barot\\\\Documents\\\\GitHub\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\barot\\\\Documents\\\\GitHub\\\\BookSTack\\\\src\\\\components\\\\BookList.js\";\nimport React, { Component } from 'react';\nimport { graphql } from 'react-apollo';\nimport { getBooksQuery } from '../queries/queries';\nimport Cards from \"./body/card\";\nimport \"./css/cardGrid.css\";\nimport BookDetails from './BookDetails';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport { withStyles } from '@material-ui/core/styles';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper\n    },\n    gridList: {\n      width: 500,\n      height: 450\n    }\n  };\n};\n\nvar BookList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BookList, _Component);\n\n  function BookList(props) {\n    var _this;\n\n    _classCallCheck(this, BookList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BookList).call(this, props));\n    _this.state = {\n      selected: null\n    };\n    return _this;\n  }\n\n  _createClass(BookList, [{\n    key: \"displayBooks\",\n    value: function displayBooks() {\n      var data = this.props.data;\n      var _props = props,\n          classes = _props.classes;\n\n      try {\n        if (data.loading) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }, \"Loading books...\");\n        } else {\n          return;\n          React.createElement(GridList, {\n            cellHeight: 160,\n            className: classes.gridList,\n            cols: 3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          }, data.books.map(function (book) {\n            return React.createElement(Cards, {\n              id: book.id,\n              title: book.title,\n              description: book.description,\n              ts: book.textSnippet,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 42\n              },\n              __self: this\n            });\n          }));\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: {\n          marginTop: \"12vh\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.displayBooks());\n    }\n  }]);\n\n  return BookList;\n}(Component);\n\nexport default graphql(getBooksQuery, {\n  options: function options(props) {\n    return {\n      variables: {\n        search: props.search,\n        howmany: 25\n      }\n    };\n  }\n})(withStyles(styles)(BookList));","map":{"version":3,"sources":["C:\\Users\\barot\\Documents\\GitHub\\BookSTack\\src\\components\\BookList.js"],"names":["React","Component","graphql","getBooksQuery","Cards","BookDetails","GridList","GridListTile","withStyles","styles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","BookList","props","state","selected","data","classes","loading","books","map","book","id","title","description","textSnippet","err","console","log","marginTop","displayBooks","options","variables","search","howmany"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACvBC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE,MADL;AAEJC,MAAAA,QAAQ,EAAE,MAFN;AAGJC,MAAAA,cAAc,EAAE,cAHZ;AAIJC,MAAAA,QAAQ,EAAE,QAJN;AAKJC,MAAAA,eAAe,EAAEN,KAAK,CAACO,OAAN,CAAcC,UAAd,CAAyBC;AALtC,KADiB;AAQvBC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,KAAK,EAAE,GADC;AAERC,MAAAA,MAAM,EAAE;AAFA;AARa,GAAL;AAAA,CAApB;;IAcMC,Q;;;;;AACF,oBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAFc;AAKjB;;;;mCACa;AACV,UAAIC,IAAI,GAAG,KAAKH,KAAL,CAAWG,IAAtB;AADU,mBAEUH,KAFV;AAAA,UAEFI,OAFE,UAEFA,OAFE;;AAGV,UAAG;AACC,YAAGD,IAAI,CAACE,OAAR,EAAgB;AAAC,iBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAR;AAAuC,SAAxD,MACO;AACH;AACA,8BAAC,QAAD;AAAU,YAAA,UAAU,EAAE,GAAtB;AAA2B,YAAA,SAAS,EAAED,OAAO,CAACR,QAA9C;AAAwD,YAAA,IAAI,EAAE,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGO,IAAI,CAACG,KAAL,CAAWC,GAAX,CAAe,UAAAC,IAAI;AAAA,mBAClB,oBAAC,KAAD;AACE,cAAA,EAAE,EAAEA,IAAI,CAACC,EADX;AAEE,cAAA,KAAK,EAAED,IAAI,CAACE,KAFd;AAGE,cAAA,WAAW,EAAEF,IAAI,CAACG,WAHpB;AAIE,cAAA,EAAE,EAAEH,IAAI,CAACI,WAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADkB;AAAA,WAAnB,CADH;AAUC;AACJ,OAfL,CAgBA,OAAMC,GAAN,EAAU;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAkB;AAEhC;;;6BACO;AACJ,aACI;AAAK,QAAA,KAAK,EAAE;AAACG,UAAAA,SAAS,EAAC;AAAX,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM,KAAKC,YAAL,EADN,CADJ;AAKH;;;;EAnCkBxC,S;;AAsCvB,eAAeC,OAAO,CAACC,aAAD,EAAe;AACnCuC,EAAAA,OAAO,EAAE,iBAAClB,KAAD,EAAS;AAChB,WAAM;AACFmB,MAAAA,SAAS,EAAC;AACRC,QAAAA,MAAM,EAACpB,KAAK,CAACoB,MADL;AAERC,QAAAA,OAAO,EAAE;AAFD;AADR,KAAN;AAMD;AARkC,CAAf,CAAP,CASZrC,UAAU,CAACC,MAAD,CAAV,CAAmBc,QAAnB,CATY,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { graphql } from 'react-apollo';\r\nimport { getBooksQuery } from '../queries/queries';\r\nimport Cards from \"./body/card\"\r\nimport \"./css/cardGrid.css\"\r\nimport BookDetails from './BookDetails';\r\nimport GridList from '@material-ui/core/GridList'\r\nimport GridListTile from '@material-ui/core/GridListTile'\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    width: 500,\r\n    height: 450,\r\n  },\r\n});\r\n\r\nclass BookList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            selected: null\r\n        }\r\n    }\r\n    displayBooks(){\r\n        var data = this.props.data;\r\n        const { classes } = props;\r\n        try{\r\n            if(data.loading){return( <div>Loading books...</div> );}\r\n              else {\r\n                return\r\n                <GridList cellHeight={160} className={classes.gridList} cols={3}>\r\n                  {data.books.map(book => (\r\n                    <Cards\r\n                      id={book.id}\r\n                      title={book.title}\r\n                      description={book.description}\r\n                      ts={book.textSnippet}\r\n                    />\r\n                  ))}\r\n                </GridList>\r\n                }\r\n            }\r\n        catch(err){console.log(err);}\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div style={{marginTop:\"12vh\"}}>\r\n                { this.displayBooks() }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default graphql(getBooksQuery,{\r\n  options: (props)=>{\r\n    return{\r\n        variables:{\r\n          search:props.search,\r\n          howmany: 25\r\n        }\r\n    }\r\n  }\r\n})(withStyles(styles)(BookList));\r\n"]},"metadata":{},"sourceType":"module"}