{"ast":null,"code":"import _classCallCheck from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\src\\\\auth\\\\login.js\";\nimport React from \"react\";\nimport firebase from \"firebase\";\nimport { Link } from 'react-router-dom'; //styles\n\nimport 'antd/dist/antd.css';\nimport { Form, Icon, Input, Button, Checkbox } from 'antd'; //auth\n\nvar config = {\n  apiKey: \"AIzaSyBdD-dZnTara6z3jjKOENeqWQJz8Lk53jQ\",\n  authDomain: \"fir-auth-b1ee0.firebaseapp.com\"\n};\nfirebase.initializeApp(config);\n\nvar FLogin =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FLogin, _React$Component);\n\n  function FLogin() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FLogin);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FLogin)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isSignedIn: false,\n      modal: \"login\",\n      confirmDirty: false,\n      autoCompleteResult: [],\n      dismiss: \"none\",\n      UserEmail: null,\n      UserEmailvarified: false,\n      UserDisplayName: null,\n      UserPhoneNumber: null,\n      UserPhotoUrl: null,\n      LoginerrorMessage: \" \",\n      LoginError: true\n    };\n    _this.uiConfig = {\n      signInFlow: \"popup\",\n      signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID, firebase.auth.EmailAuthProvider.PROVIDER_ID],\n      callbacks: {\n        signInSuccess: function signInSuccess() {\n          return false;\n        }\n      }\n    };\n\n    _this.handleSubmitLogin = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          firebase.auth().signInWithEmailAndPassword(values.userName, values.password).catch(function (error) {\n            // Handle Errors here.\n            var errorCode = error.code;\n            var errorMessage = error.message;\n\n            _this.setState({\n              LoginerrorMessage: errorMessage\n            });\n          });\n\n          if (_this.state.isSignedIn) {\n            firebase.auth().onAuthStateChanged(function (user) {\n              _this.setState({\n                isSignedIn: !!user,\n                UserEmail: user.email,\n                UserEmailvarified: user.emailVerified,\n                UserDisplayName: user.displayName,\n                UserPhoneNumber: user.phoneNumber,\n                UserPhotoUrl: user.photoURL\n              });\n\n              console.log(\"checking\", user);\n            });\n          }\n\n          if (_this.state.isSignedIn) {\n            _this.setState({\n              dismiss: \"modal\"\n            });\n          }\n\n          console.log(_this.state);\n        }\n      });\n    };\n\n    _this.handleSubmitSignup = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          _this.displayLogin();\n\n          firebase.auth().createUserWithEmailAndPassword(values.email, values.password).catch(function (error) {\n            // Handle Errors here.\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            console.log(errorMessage);\n          });\n          firebase.auth().onAuthStateChanged(function (user) {\n            _this.setState({\n              isSignedIn: !!user,\n              UserEmail: user.email,\n              UserEmailvarified: user.emailVerified,\n              UserDisplayName: user.displayName,\n              UserPhoneNumber: user.phoneNumber,\n              UserPhotoUrl: user.photoURL\n            });\n\n            console.log(\"checking\", user);\n          });\n        }\n      });\n    };\n\n    _this.compareToFirstPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n\n    _this.validateToNextPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && _this.state.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    _this.displaySignup = function () {\n      return _this.setState({\n        modal: \"signup\"\n      });\n    };\n\n    _this.displayLogin = function () {\n      return _this.setState({\n        modal: \"login\"\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(FLogin, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var autoCompleteResult = this.state.autoCompleteResult;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 8\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 16\n          }\n        }\n      };\n      var tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 16,\n            offset: 8\n          }\n        }\n      };\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, this.state.isSignedIn), this.state.modal === \"login\" ? React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"modal-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        class: \"modal-title\",\n        id: \"exampleModalCenterTitle\",\n        style: {\n          margin: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"button\", {\n        type: \"button\",\n        class: \"close\",\n        \"data-dismiss\": \"modal\",\n        \"aria-label\": \"Close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"\\xD7\"))), React.createElement(\"div\", {\n        class: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmitLogin,\n        style: {\n          maxWidth: \"300px\",\n          margin: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, getFieldDecorator('userName', {\n        rules: [{\n          required: true,\n          message: 'Please input your email!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }),\n        placeholder: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }))), this.state.errorMessage, React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your Password!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, getFieldDecorator('remember', {\n        valuePropName: 'checked',\n        initialValue: true\n      })(React.createElement(Checkbox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Remember me\")), React.createElement(\"a\", {\n        atyle: {\n          float: \"right\"\n        },\n        href: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"Forgot password\"), React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        style: {\n          width: \"100%\"\n        },\n        \"data-dismiss\": this.state.dismiss,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Log in\"), \"Or \", React.createElement(\"a\", {\n        onClick: this.displaySignup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"register now!\"))))) : React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"modal-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        class: \"modal-title\",\n        id: \"exampleModalCenterTitle\",\n        style: {\n          margin: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Signup\"), React.createElement(\"button\", {\n        type: \"button\",\n        class: \"close\",\n        \"data-dismiss\": \"modal\",\n        \"aria-label\": \"Close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"\\xD7\"))), React.createElement(\"div\", {\n        class: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Form, Object.assign({}, formItemLayout, {\n        onSubmit: this.handleSubmitSignup,\n        style: {\n          maxWidth: \"400px\",\n          margin: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }), React.createElement(Form.Item, {\n        label: \"E-mail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, getFieldDecorator('email', {\n        rules: [{\n          type: 'email',\n          message: 'The input is not valid E-mail!'\n        }, {\n          required: true,\n          message: 'Please input your E-mail!'\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }, {\n          validator: this.validateToNextPassword\n        }]\n      })(React.createElement(Input, {\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Confirm Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, getFieldDecorator('confirm', {\n        rules: [{\n          required: true,\n          message: 'Please confirm your password!'\n        }, {\n          validator: this.compareToFirstPassword\n        }]\n      })(React.createElement(Input, {\n        type: \"password\",\n        onBlur: this.handleConfirmBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }))), React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }), getFieldDecorator('agreement', {\n        valuePropName: 'checked'\n      })(React.createElement(Checkbox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"I have read the \", React.createElement(\"a\", {\n        href: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"agreement\")))), React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, \"Register\")), \"Or \", React.createElement(\"a\", {\n        onClick: this.displayLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"sign in  now!\")))), React.createElement(\"div\", {\n        class: \"modal-footer\",\n        style: {\n          margin: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-primary\",\n        \"data-dismiss\": \"modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, \"Google\"), React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, \"Facebook\"), React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"Github\"), React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"LinkedIn\")));\n    }\n  }]);\n\n  return FLogin;\n}(React.Component);\n\nvar WrappedLoginForm = Form.create({\n  name: 'firebase_login'\n})(FLogin);\nexport default WrappedLoginForm;","map":{"version":3,"sources":["D:\\Projects\\BookStack\\BookSTack\\src\\auth\\login.js"],"names":["React","firebase","Link","Form","Icon","Input","Button","Checkbox","config","apiKey","authDomain","initializeApp","FLogin","state","isSignedIn","modal","confirmDirty","autoCompleteResult","dismiss","UserEmail","UserEmailvarified","UserDisplayName","UserPhoneNumber","UserPhotoUrl","LoginerrorMessage","LoginError","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","EmailAuthProvider","callbacks","signInSuccess","handleSubmitLogin","e","preventDefault","props","form","validateFields","err","values","signInWithEmailAndPassword","userName","password","catch","error","errorCode","code","errorMessage","message","setState","onAuthStateChanged","user","email","emailVerified","displayName","phoneNumber","photoURL","console","log","handleSubmitSignup","validateFieldsAndScroll","displayLogin","createUserWithEmailAndPassword","compareToFirstPassword","rule","value","callback","getFieldValue","validateToNextPassword","force","displaySignup","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","margin","maxWidth","rules","required","color","valuePropName","initialValue","float","width","type","validator","handleConfirmBlur","Component","WrappedLoginForm","create","name"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;;AACA,OAAO,oBAAP;AACA,SACEC,IADF,EACQC,IADR,EACcC,KADd,EACqBC,MADrB,EAC6BC,QAD7B,QAEO,MAFP,C,CAKA;;AACA,IAAIC,MAAM,GAAG;AACZC,EAAAA,MAAM,EAAE,yCADI;AAEZC,EAAAA,UAAU,EAAE;AAFA,CAAb;AAIAT,QAAQ,CAACU,aAAT,CAAuBH,MAAvB;;IAEMI,M;;;;;;;;;;;;;;;;;UAENC,K,GAAQ;AACNC,MAAAA,UAAU,EAAE,KADN;AAENC,MAAAA,KAAK,EAAC,OAFA;AAGNC,MAAAA,YAAY,EAAE,KAHR;AAINC,MAAAA,kBAAkB,EAAE,EAJd;AAKNC,MAAAA,OAAO,EAAC,MALF;AAMNC,MAAAA,SAAS,EAAC,IANJ;AAONC,MAAAA,iBAAiB,EAAE,KAPb;AAQNC,MAAAA,eAAe,EAAC,IARV;AASNC,MAAAA,eAAe,EAAC,IATV;AAUNC,MAAAA,YAAY,EAAC,IAVP;AAWNC,MAAAA,iBAAiB,EAAC,GAXZ;AAYNC,MAAAA,UAAU,EAAC;AAZL,K;UAcRC,Q,GAAW;AACDC,MAAAA,UAAU,EAAE,OADX;AAEDC,MAAAA,aAAa,EAAE,CACb3B,QAAQ,CAAC4B,IAAT,CAAcC,kBAAd,CAAiCC,WADpB,EAEb9B,QAAQ,CAAC4B,IAAT,CAAcG,iBAAd,CAAgCD,WAFnB,CAFd;AAMDE,MAAAA,SAAS,EAAE;AACTC,QAAAA,aAAa,EAAE;AAAA,iBAAM,KAAN;AAAA;AADN;AANV,K;;UAaXC,iB,GAAoB,UAACC,CAAD,EAAO;AACzBA,MAAAA,CAAC,CAACC,cAAF;;AACM,YAAKC,KAAL,CAAWC,IAAX,CAAgBC,cAAhB,CAA+B,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAC9C,YAAI,CAACD,GAAL,EAAU;AACRxC,UAAAA,QAAQ,CAAC4B,IAAT,GAAgBc,0BAAhB,CAA2CD,MAAM,CAACE,QAAlD,EAA4DF,MAAM,CAACG,QAAnE,EAA6EC,KAA7E,CAAmF,UAAAC,KAAK,EAAG;AACzF;AACA,gBAAIC,SAAS,GAAGD,KAAK,CAACE,IAAtB;AACA,gBAAIC,YAAY,GAAGH,KAAK,CAACI,OAAzB;;AACA,kBAAKC,QAAL,CAAc;AACZ5B,cAAAA,iBAAiB,EAAC0B;AADN,aAAd;AAID,WARD;;AASA,cAAK,MAAKrC,KAAL,CAAWC,UAAhB,EAA2B;AACPb,YAAAA,QAAQ,CAAC4B,IAAT,GAAgBwB,kBAAhB,CAAmC,UAAAC,IAAI,EAAI;AAC1C,oBAAKF,QAAL,CAAc;AACZtC,gBAAAA,UAAU,EAAE,CAAC,CAACwC,IADF;AAEZnC,gBAAAA,SAAS,EAACmC,IAAI,CAACC,KAFH;AAGZnC,gBAAAA,iBAAiB,EAACkC,IAAI,CAACE,aAHX;AAIZnC,gBAAAA,eAAe,EAACiC,IAAI,CAACG,WAJT;AAKZnC,gBAAAA,eAAe,EAACgC,IAAI,CAACI,WALT;AAMZnC,gBAAAA,YAAY,EAAC+B,IAAI,CAACK;AANN,eAAd;;AAQCC,cAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBP,IAAvB;AACF,aAVA;AAWmB;;AAEvC,cAAG,MAAKzC,KAAL,CAAWC,UAAd,EAAyB;AACvB,kBAAKsC,QAAL,CAAc;AAAClC,cAAAA,OAAO,EAAC;AAAT,aAAd;AACD;;AACD0C,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAKhD,KAAjB;AACD;AACF,OA9BD;AAiCD,K;;UACPiD,kB,GAAqB,UAAC1B,CAAD,EAAO;AAC1BA,MAAAA,CAAC,CAACC,cAAF;;AACA,YAAKC,KAAL,CAAWC,IAAX,CAAgBwB,uBAAhB,CAAwC,UAACtB,GAAD,EAAMC,MAAN,EAAiB;AACvD,YAAI,CAACD,GAAL,EAAU;AACR,gBAAKuB,YAAL;;AAEF/D,UAAAA,QAAQ,CAAC4B,IAAT,GAAgBoC,8BAAhB,CAA+CvB,MAAM,CAACa,KAAtD,EAA6Db,MAAM,CAACG,QAApE,EAA8EC,KAA9E,CAAoF,UAAAC,KAAK,EAAG;AAC1F;AACA,gBAAIC,SAAS,GAAGD,KAAK,CAACE,IAAtB;AACA,gBAAIC,YAAY,GAAGH,KAAK,CAACI,OAAzB;AACAS,YAAAA,OAAO,CAACC,GAAR,CAAYX,YAAZ;AACD,WALD;AAMAjD,UAAAA,QAAQ,CAAC4B,IAAT,GAAgBwB,kBAAhB,CAAmC,UAAAC,IAAI,EAAI;AAClC,kBAAKF,QAAL,CAAc;AACZtC,cAAAA,UAAU,EAAE,CAAC,CAACwC,IADF;AAEZnC,cAAAA,SAAS,EAACmC,IAAI,CAACC,KAFH;AAGZnC,cAAAA,iBAAiB,EAACkC,IAAI,CAACE,aAHX;AAIZnC,cAAAA,eAAe,EAACiC,IAAI,CAACG,WAJT;AAKZnC,cAAAA,eAAe,EAACgC,IAAI,CAACI,WALT;AAMZnC,cAAAA,YAAY,EAAC+B,IAAI,CAACK;AANN,aAAd;;AAQCC,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBP,IAAvB;AACF,WAVR;AAWC;AACF,OAtBD;AAuBD,K;;UAEDY,sB,GAAyB,UAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,EAA2B;AAClD,UAAM9B,IAAI,GAAG,MAAKD,KAAL,CAAWC,IAAxB;;AACA,UAAI6B,KAAK,IAAIA,KAAK,KAAK7B,IAAI,CAAC+B,aAAL,CAAmB,UAAnB,CAAvB,EAAuD;AACrDD,QAAAA,QAAQ,CAAC,+CAAD,CAAR;AACD,OAFD,MAEO;AACLA,QAAAA,QAAQ;AACT;AACF,K;;UAEDE,sB,GAAyB,UAACJ,IAAD,EAAOC,KAAP,EAAcC,QAAd,EAA2B;AAClD,UAAM9B,IAAI,GAAG,MAAKD,KAAL,CAAWC,IAAxB;;AACA,UAAI6B,KAAK,IAAI,MAAKvD,KAAL,CAAWG,YAAxB,EAAsC;AACpCuB,QAAAA,IAAI,CAACC,cAAL,CAAoB,CAAC,SAAD,CAApB,EAAiC;AAAEgC,UAAAA,KAAK,EAAE;AAAT,SAAjC;AACD;;AACDH,MAAAA,QAAQ;AACT,K;;UAEDI,a,GAAgB,YAAI;AAClB,aAAO,MAAKrB,QAAL,CAAc;AAACrC,QAAAA,KAAK,EAAC;AAAP,OAAd,CAAP;AACD,K;;UACDiD,Y,GAAe,YAAI;AACjB,aAAO,MAAKZ,QAAL,CAAc;AAACrC,QAAAA,KAAK,EAAC;AAAP,OAAd,CAAP;AACD,K;;;;;;;6BAEW;AAAA,UACG2D,iBADH,GACyB,KAAKpC,KAAL,CAAWC,IADpC,CACGmC,iBADH;AAAA,UAEIzD,kBAFJ,GAE2B,KAAKJ,KAFhC,CAEII,kBAFJ;AAIJ,UAAM0D,cAAc,GAAG;AACrBC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,EAAE,EAAE;AAAEC,YAAAA,IAAI,EAAE;AAAR,WADI;AAERC,UAAAA,EAAE,EAAE;AAAED,YAAAA,IAAI,EAAE;AAAR;AAFI,SADW;AAKrBE,QAAAA,UAAU,EAAE;AACVH,UAAAA,EAAE,EAAE;AAAEC,YAAAA,IAAI,EAAE;AAAR,WADM;AAEVC,UAAAA,EAAE,EAAE;AAAED,YAAAA,IAAI,EAAE;AAAR;AAFM;AALS,OAAvB;AAUA,UAAMG,kBAAkB,GAAG;AACzBD,QAAAA,UAAU,EAAE;AACVH,UAAAA,EAAE,EAAE;AACFC,YAAAA,IAAI,EAAE,EADJ;AAEFI,YAAAA,MAAM,EAAE;AAFN,WADM;AAKVH,UAAAA,EAAE,EAAE;AACFD,YAAAA,IAAI,EAAE,EADJ;AAEFI,YAAAA,MAAM,EAAE;AAFN;AALM;AADa,OAA3B;AAaF,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKrE,KAAL,CAAWC,UAAhB,CADA,EAGE,KAAKD,KAAL,CAAWE,KAAX,KAAmB,OAAnB,GACF,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,KAAK,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAC,aAAV;AAAwB,QAAA,EAAE,EAAC,yBAA3B;AAAqD,QAAA,KAAK,EAAE;AAACoE,UAAAA,MAAM,EAAC;AAAR,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,OAA5B;AAAoC,wBAAa,OAAjD;AAAyD,sBAAW,OAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,uBAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAFF,CADA,EAOA;AAAK,QAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACoB,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKhD,iBAArB;AAAwC,QAAA,KAAK,EAAE;AAAEiD,UAAAA,QAAQ,EAAE,OAAZ;AAAoBD,UAAAA,MAAM,EAAC;AAA3B,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGT,iBAAiB,CAAC,UAAD,EAAa;AAC7BW,QAAAA,KAAK,EAAE,CAAC;AAAEC,UAAAA,QAAQ,EAAE,IAAZ;AAAkBnC,UAAAA,OAAO,EAAE;AAA3B,SAAD;AADsB,OAAb,CAAjB,CAGC,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAkB,UAAA,KAAK,EAAE;AAAEoC,YAAAA,KAAK,EAAE;AAAT,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAf;AAA0E,QAAA,WAAW,EAAC,UAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHD,CADH,CADL,EAOkB,KAAK1E,KAAL,CAAWqC,YAP7B,EAQK,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGwB,iBAAiB,CAAC,UAAD,EAAa;AAC7BW,QAAAA,KAAK,EAAE,CAAC;AAAEC,UAAAA,QAAQ,EAAE,IAAZ;AAAkBnC,UAAAA,OAAO,EAAE;AAA3B,SAAD;AADsB,OAAb,CAAjB,CAGC,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAkB,UAAA,KAAK,EAAE;AAAEoC,YAAAA,KAAK,EAAE;AAAT,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAf;AAA0E,QAAA,IAAI,EAAC,UAA/E;AAA0F,QAAA,WAAW,EAAC,UAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHD,CADH,CARL,EAeK,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGb,iBAAiB,CAAC,UAAD,EAAa;AAC7Bc,QAAAA,aAAa,EAAE,SADc;AAE7BC,QAAAA,YAAY,EAAE;AAFe,OAAb,CAAjB,CAIC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJD,CADH,EAOE;AAAG,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR,SAAV;AAA4B,QAAA,IAAI,EAAC,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAPF,EAQD,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAAyC,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAhD;AAAoE,wBAAc,KAAK9E,KAAL,CAAWK,OAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARC,SAWK;AAAI,QAAA,OAAO,EAAE,KAAKuD,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAXL,CAfL,CADpB,CAPA,CADE,GAyCF,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,KAAK,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAC,aAAV;AAAwB,QAAA,EAAE,EAAC,yBAA3B;AAAqD,QAAA,KAAK,EAAE;AAACU,UAAAA,MAAM,EAAC;AAAR,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,OAA5B;AAAoC,wBAAa,OAAjD;AAAyD,sBAAW,OAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,uBAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAFF,CADA,EAOA;AAAK,QAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACqB,oBAAC,IAAD,oBAAUR,cAAV;AAA0B,QAAA,QAAQ,EAAE,KAAKb,kBAAzC;AAA8D,QAAA,KAAK,EAAE;AAAEsB,UAAAA,QAAQ,EAAE,OAAZ;AAAoBD,UAAAA,MAAM,EAAC;AAA3B,SAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACG,oBAAC,IAAD,CAAM,IAAN;AACE,QAAA,KAAK,EAAC,QADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGGT,iBAAiB,CAAC,OAAD,EAAU;AAC1BW,QAAAA,KAAK,EAAE,CAAC;AACNO,UAAAA,IAAI,EAAE,OADA;AACSzC,UAAAA,OAAO,EAAE;AADlB,SAAD,EAEJ;AACDmC,UAAAA,QAAQ,EAAE,IADT;AACenC,UAAAA,OAAO,EAAE;AADxB,SAFI;AADmB,OAAV,CAAjB,CAOC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPD,CAHH,CADH,EAcG,oBAAC,IAAD,CAAM,IAAN;AACE,QAAA,KAAK,EAAC,UADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGGuB,iBAAiB,CAAC,UAAD,EAAa;AAC7BW,QAAAA,KAAK,EAAE,CAAC;AACNC,UAAAA,QAAQ,EAAE,IADJ;AACUnC,UAAAA,OAAO,EAAE;AADnB,SAAD,EAEJ;AACD0C,UAAAA,SAAS,EAAE,KAAKtB;AADf,SAFI;AADsB,OAAb,CAAjB,CAOC,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPD,CAHH,CAdH,EA2BG,oBAAC,IAAD,CAAM,IAAN;AACE,QAAA,KAAK,EAAC,kBADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGGG,iBAAiB,CAAC,SAAD,EAAY;AAC5BW,QAAAA,KAAK,EAAE,CAAC;AACNC,UAAAA,QAAQ,EAAE,IADJ;AACUnC,UAAAA,OAAO,EAAE;AADnB,SAAD,EAEJ;AACD0C,UAAAA,SAAS,EAAE,KAAK3B;AADf,SAFI;AADqB,OAAZ,CAAjB,CAOC,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,MAAM,EAAE,KAAK4B,iBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPD,CAHH,CA3BH,EAwCG,oBAAC,IAAD,CAAM,IAAN,oBAAeb,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACGP,iBAAiB,CAAC,WAAD,EAAc;AAC9Bc,QAAAA,aAAa,EAAE;AADe,OAAd,CAAjB,CAGC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAA0B;AAAG,QAAA,IAAI,EAAC,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA1B,CAHD,CADH,CAxCH,EAgDG,oBAAC,IAAD,CAAM,IAAN,oBAAeP,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACC,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAA0C,QAAA,KAAK,EAAE;AAACU,UAAAA,KAAK,EAAE;AAAR,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,CAhDH,SAmDQ;AAAI,QAAA,OAAO,EAAE,KAAK3B,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAnDR,CADrB,CAPA,CA5CA,EA4GA;AAAK,QAAA,KAAK,EAAC,cAAX;AAA0B,QAAA,KAAK,EAAE;AAACmB,UAAAA,MAAM,EAAC;AAAR,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,iBAA5B;AAA8C,wBAAa,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,EAEA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,iBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA,EAGA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,iBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA,EAIA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,iBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJA,CA5GA,CADF;AAuHD;;;;EAtQgBnF,KAAK,CAAC+F,S;;AA0Q3B,IAAMC,gBAAgB,GAAG7F,IAAI,CAAC8F,MAAL,CAAY;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAZ,EAAwCtF,MAAxC,CAAzB;AAEA,eAAeoF,gBAAf","sourcesContent":["import React from \"react\"\r\nimport firebase from \"firebase\"\r\nimport { Link } from 'react-router-dom'\r\n\r\n//styles\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n  Form, Icon, Input, Button, Checkbox,\r\n} from 'antd';\r\n\r\n\r\n//auth\r\nvar config = {\r\n apiKey: \"AIzaSyBdD-dZnTara6z3jjKOENeqWQJz8Lk53jQ\",\r\n authDomain: \"fir-auth-b1ee0.firebaseapp.com\",\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nclass FLogin extends React.Component{\r\n\r\nstate = {\r\n  isSignedIn: false,\r\n  modal:\"login\",\r\n  confirmDirty: false,\r\n  autoCompleteResult: [],\r\n  dismiss:\"none\",\r\n  UserEmail:null,\r\n  UserEmailvarified: false,\r\n  UserDisplayName:null,\r\n  UserPhoneNumber:null,\r\n  UserPhotoUrl:null,\r\n  LoginerrorMessage:\" \",\r\n  LoginError:true\r\n}\r\nuiConfig = {\r\n          signInFlow: \"popup\",\r\n          signInOptions: [\r\n            firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n            firebase.auth.EmailAuthProvider.PROVIDER_ID\r\n          ],\r\n          callbacks: {\r\n            signInSuccess: () => false\r\n          }\r\n        }\r\n\r\n\r\n\r\nhandleSubmitLogin = (e) => {\r\n  e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n          if (!err) {\r\n            firebase.auth().signInWithEmailAndPassword(values.userName, values.password).catch(error=> {\r\n              // Handle Errors here.\r\n              var errorCode = error.code;\r\n              var errorMessage = error.message;\r\n              this.setState({\r\n                LoginerrorMessage:errorMessage\r\n              });\r\n\r\n            });\r\n            if ( this.state.isSignedIn){\r\n                                firebase.auth().onAuthStateChanged(user => {\r\n                                 this.setState({\r\n                                   isSignedIn: !!user,\r\n                                   UserEmail:user.email,\r\n                                   UserEmailvarified:user.emailVerified,\r\n                                   UserDisplayName:user.displayName,\r\n                                   UserPhoneNumber:user.phoneNumber,\r\n                                   UserPhotoUrl:user.photoURL\r\n                                  })\r\n                                  console.log(\"checking\",user);\r\n                               });\r\n                                                  }\r\n\r\n            if(this.state.isSignedIn){\r\n              this.setState({dismiss:\"modal\"})\r\n            }\r\n            console.log(this.state);\r\n          }\r\n        });\r\n\r\n\r\n      }\r\nhandleSubmitSignup = (e) => {\r\n  e.preventDefault();\r\n  this.props.form.validateFieldsAndScroll((err, values) => {\r\n    if (!err) {\r\n      this.displayLogin()\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(values.email, values.password).catch(error=> {\r\n      // Handle Errors here.\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      console.log(errorMessage)\r\n    });\r\n    firebase.auth().onAuthStateChanged(user => {\r\n             this.setState({\r\n               isSignedIn: !!user,\r\n               UserEmail:user.email,\r\n               UserEmailvarified:user.emailVerified,\r\n               UserDisplayName:user.displayName,\r\n               UserPhoneNumber:user.phoneNumber,\r\n               UserPhotoUrl:user.photoURL\r\n              })\r\n              console.log(\"checking\",user);\r\n           });\r\n    }\r\n  });\r\n}\r\n\r\ncompareToFirstPassword = (rule, value, callback) => {\r\n  const form = this.props.form;\r\n  if (value && value !== form.getFieldValue('password')) {\r\n    callback('Two passwords that you enter is inconsistent!');\r\n  } else {\r\n    callback();\r\n  }\r\n}\r\n\r\nvalidateToNextPassword = (rule, value, callback) => {\r\n  const form = this.props.form;\r\n  if (value && this.state.confirmDirty) {\r\n    form.validateFields(['confirm'], { force: true });\r\n  }\r\n  callback();\r\n}\r\n\r\ndisplaySignup = ()=>{\r\n  return this.setState({modal:\"signup\"})\r\n}\r\ndisplayLogin = ()=>{\r\n  return this.setState({modal:\"login\"})\r\n}\r\n\r\n    render(){\r\n       const { getFieldDecorator } = this.props.form;\r\n        const { autoCompleteResult } = this.state;\r\n\r\n        const formItemLayout = {\r\n          labelCol: {\r\n            xs: { span: 24 },\r\n            sm: { span: 8 },\r\n          },\r\n          wrapperCol: {\r\n            xs: { span: 24 },\r\n            sm: { span: 16 },\r\n          },\r\n        };\r\n        const tailFormItemLayout = {\r\n          wrapperCol: {\r\n            xs: {\r\n              span: 24,\r\n              offset: 0,\r\n            },\r\n            sm: {\r\n              span: 16,\r\n              offset: 8,\r\n            },\r\n          },\r\n        };\r\n\r\n      return(\r\n        <React.Fragment>\r\n        <h1>{this.state.isSignedIn}</h1>\r\n        {\r\n          this.state.modal===\"login\" ?\r\n        <React.Fragment>\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"exampleModalCenterTitle\" style={{margin:\"auto\"}}>Login</h5>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n                            <Form onSubmit={this.handleSubmitLogin} style={{ maxWidth: \"300px\",margin:\"auto\"}}>\r\n                                 <Form.Item>\r\n                                   {getFieldDecorator('userName', {\r\n                                     rules: [{ required: true, message: 'Please input your email!' }],\r\n                                   })(\r\n                                     <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\r\n                                   )}\r\n                                 </Form.Item>{this.state.errorMessage}\r\n                                 <Form.Item>\r\n                                   {getFieldDecorator('password', {\r\n                                     rules: [{ required: true, message: 'Please input your Password!' }],\r\n                                   })(\r\n                                     <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\r\n                                   )}\r\n                                 </Form.Item>\r\n                                 <Form.Item>\r\n                                   {getFieldDecorator('remember', {\r\n                                     valuePropName: 'checked',\r\n                                     initialValue: true,\r\n                                   })(\r\n                                     <Checkbox>Remember me</Checkbox>\r\n                                   )}\r\n                                   <a atyle={{float: \"right\"}} href=\"\">Forgot password</a>\r\n                                <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\"  }} data-dismiss={this.state.dismiss}  >\r\n                                        Log in\r\n                                   </Button>\r\n                                   Or <a  onClick={this.displaySignup}>register now!</a>\r\n                                 </Form.Item>\r\n                          </Form>\r\n        </div>\r\n        </React.Fragment>\r\n        :\r\n        <React.Fragment>\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"exampleModalCenterTitle\" style={{margin:\"auto\"}}>Signup</h5>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n                             <Form {...formItemLayout} onSubmit={this.handleSubmitSignup}  style={{ maxWidth: \"400px\",margin:\"auto\"}}>\r\n                                <Form.Item\r\n                                  label=\"E-mail\"\r\n                                >\r\n                                  {getFieldDecorator('email', {\r\n                                    rules: [{\r\n                                      type: 'email', message: 'The input is not valid E-mail!',\r\n                                    }, {\r\n                                      required: true, message: 'Please input your E-mail!',\r\n                                    }],\r\n                                  })(\r\n                                    <Input />\r\n                                  )}\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                  label=\"Password\"\r\n                                >\r\n                                  {getFieldDecorator('password', {\r\n                                    rules: [{\r\n                                      required: true, message: 'Please input your password!',\r\n                                    }, {\r\n                                      validator: this.validateToNextPassword,\r\n                                    }],\r\n                                  })(\r\n                                    <Input type=\"password\" />\r\n                                  )}\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                  label=\"Confirm Password\"\r\n                                >\r\n                                  {getFieldDecorator('confirm', {\r\n                                    rules: [{\r\n                                      required: true, message: 'Please confirm your password!',\r\n                                    }, {\r\n                                      validator: this.compareToFirstPassword,\r\n                                    }],\r\n                                  })(\r\n                                    <Input type=\"password\" onBlur={this.handleConfirmBlur} />\r\n                                  )}\r\n                                </Form.Item>\r\n                                <Form.Item {...tailFormItemLayout}>\r\n                                  {getFieldDecorator('agreement', {\r\n                                    valuePropName: 'checked',\r\n                                  })(\r\n                                    <Checkbox>I have read the <a href=\"\">agreement</a></Checkbox>\r\n                                  )}\r\n                                </Form.Item>\r\n\r\n                                <Form.Item {...tailFormItemLayout}>\r\n                                 <Button type=\"primary\" htmlType=\"submit\"  style={{width: \"100%\"  }}>Register</Button>\r\n                               </Form.Item>\r\n                                  Or <a  onClick={this.displayLogin}>sign in  now!</a>\r\n                                </Form>\r\n        </div>\r\n        </React.Fragment>\r\n      }\r\n        <div class=\"modal-footer\" style={{margin:\"auto\"}}>\r\n        <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">Google</button>\r\n        <button type=\"button\" class=\"btn btn-primary\">Facebook</button>\r\n        <button type=\"button\" class=\"btn btn-primary\">Github</button>\r\n        <button type=\"button\" class=\"btn btn-primary\">LinkedIn</button>\r\n        </div>\r\n\r\n      </React.Fragment>\r\n\r\n    );\r\n    }\r\n\r\n}\r\n\r\nconst WrappedLoginForm = Form.create({ name: 'firebase_login' })(FLogin);\r\n\r\nexport default WrappedLoginForm;\r\n"]},"metadata":{},"sourceType":"module"}