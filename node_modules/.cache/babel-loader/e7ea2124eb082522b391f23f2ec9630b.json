{"ast":null,"code":"import _taggedTemplateLiteral from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\src\\\\TEST\\\\skeleton.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n              background:tomato;\\n              color:white;\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n        display: inline-block;\\n        border-radius: 3px;\\n        width: 11rem;\\n        background: transparent;\\n        color: tomato;\\n        border: 2px solid tomato;\\n        \", \"\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled, { css } from 'styled-components';\nimport { graphql, compose } from 'react-apollo';\nimport '../queries/queries';\n\nvar Skeleton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Skeleton, _Component);\n\n  function Skeleton(props) {\n    var _this;\n\n    _classCallCheck(this, Skeleton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Skeleton).call(this, props));\n\n    _this.addItem = function () {\n      _this.setState(function (state) {\n        var books = state.books.concat(state.value);\n        return {\n          books: books\n        };\n      });\n    };\n\n    _this.state = {\n      recent: false,\n      value: \"\",\n      user_name: \"\",\n      books: [],\n      recent_book: \"\",\n      isAuthenticated: false\n    };\n    return _this;\n  }\n\n  _createClass(Skeleton, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var Button = styled.button(_templateObject(), function (props) {\n        return props.primary && css(_templateObject2());\n      });\n      console.log(this.props);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          position: \"relative\",\n          marginTop: \"20px\",\n          marginLeft: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            user_name: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), \" Enter your name \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        style: {\n          marginTop: \"20px\"\n        },\n        onChange: function onChange(e) {\n          return _this2.setState({\n            value: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), \" enter the name of the book/books that've infuenced you\", React.createElement(Button, {\n        primary: true,\n        style: {\n          marginLeft: \"5px\"\n        },\n        onClick: this.addItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Add Book\")), React.createElement(\"div\", {\n        id: \"book-details\",\n        style: {\n          top: \"56px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Name:\", this.state.user_name, this.state.recent ? React.createElement(\"p\", {\n        style: {\n          fontSize: \"18px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"(recent book : \", this.state.recent_book, \")\") : null), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Books:\", React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, this.state.books.map(function (item) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, item, React.createElement(\"p\", {\n          style: {\n            fontSize: \"18px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"(i'll find this book on google and  goodread to make it accurate)\"), React.createElement(\"p\", {\n          style: {\n            fontSize: \"18px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \"(and will ask user if this is the book he/she talking about then we'll follow further)\"), React.createElement(\"p\", {\n          style: {\n            fontSize: \"18px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \"(or if we didn't able to fetch the currect book we ask user to add title, author name ,genre and stuff)\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        })), React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"Author \"), \" \", React.createElement(\"p\", {\n          style: {\n            fontSize: \"18px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"(then i'll fetch the details about the author of the book, from goodread)\"), React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"grenre:\"), \" \", React.createElement(\"p\", {\n          style: {\n            fontSize: \"18px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"(then i'll add all the genre about the books that a user added to a list and save it to the user databse to display the taste of the user)\"));\n      })))), React.createElement(\"h2\", {\n        style: {\n          marginLeft: \"18px\",\n          marginTop: \"30px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"this is it for the first time when a user joins! \"), React.createElement(\"p\", {\n        style: {\n          marginLeft: \"18px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Now we'll work on the current activity of the user\"), React.createElement(\"div\", {\n        style: {\n          position: \"relative\",\n          marginTop: \"20px\",\n          marginLeft: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            recent_book: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), \" post the recent book that you've been reading or read \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(Button, {\n        primary: true,\n        style: {\n          marginTop: \"5px\"\n        },\n        onClick: function onClick() {\n          return _this2.setState({\n            recent: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Post\")), React.createElement(\"div\", {\n        style: {\n          marginLeft: \"18px\",\n          marginTop: \"30px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"and more !! like what made him read that book? \"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"or 5 senctance about that book or rate that book \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"add the ideas you got \"), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"and make a beautiful front end, i feel exhausted on that \")));\n    }\n  }]);\n\n  return Skeleton;\n}(Component);\n\nexport default Skeleton;","map":{"version":3,"sources":["D:\\Projects\\BookStack\\BookSTack\\src\\TEST\\skeleton.js"],"names":["React","Component","styled","css","graphql","compose","Skeleton","props","addItem","setState","state","books","concat","value","recent","user_name","recent_book","isAuthenticated","Button","button","primary","console","log","position","marginTop","marginLeft","e","target","top","fontSize","map","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport styled, { css } from 'styled-components'\r\nimport { graphql, compose } from 'react-apollo';\r\nimport { } from '../queries/queries';\r\n\r\n\r\n\r\n\r\n\r\nclass Skeleton extends Component {\r\n\r\n  constructor(props){\r\n      super(props);\r\n      this.state = {\r\n          recent:false,\r\n          value:\"\",\r\n          user_name: \"\",\r\n          books:[],\r\n          recent_book:\"\",\r\n          isAuthenticated:false\r\n      }\r\n  }\r\n\r\n  addItem = ()=>{\r\n    this.setState(state=>{\r\n      const books = state.books.concat (state.value);\r\n      return{\r\n        books\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n\r\n    const Button = styled.button `\r\n        display: inline-block;\r\n        border-radius: 3px;\r\n        width: 11rem;\r\n        background: transparent;\r\n        color: tomato;\r\n        border: 2px solid tomato;\r\n        ${props=>props.primary && css`\r\n              background:tomato;\r\n              color:white;`}\r\n    `;\r\n    console.log(this.props);\r\n    return (\r\n        <div>\r\n\r\n\r\n        <div style={{position:\"relative\",marginTop:\"20px\",marginLeft:\"20px\"}}>\r\n        <input type=\"text\"  onChange={(e)=>this.setState({user_name:e.target.value})}/> Enter your name <br/>\r\n        <input type=\"text\"  style={{marginTop:\"20px\"}} onChange={(e)=>this.setState({value:e.target.value})}/> enter the name of the book/books that've infuenced you\r\n        <Button primary style={{marginLeft:\"5px\"}} onClick={this.addItem} >Add Book</Button>\r\n      </div>\r\n\r\n        <div id=\"book-details\" style={{top:\"56px\"}}>\r\n          <h1>Name:{this.state.user_name}\r\n          {this.state.recent?\r\n           <p style={{fontSize:\"18px\"}}>(recent book\r\n            : {this.state.recent_book}\r\n          )</p>:\r\n         null}</h1>\r\n\r\n          <h2>Books:\r\n            <ul>\r\n            {this.state.books.map(item=>\r\n              <div>\r\n              <li>{item}<p style={{fontSize:\"18px\"}}>(i'll find this book on google and  goodread to make it accurate)</p>\r\n              <p style={{fontSize:\"18px\"}}>(and will ask user if this is the book he/she talking about then we'll follow further)</p>\r\n              <p style={{fontSize:\"18px\"}}>(or if we didn't able to fetch the currect book we ask user to add title, author name ,genre and stuff)</p><br/>\r\n              </li>\r\n               <h4>Author </h4> <p  style={{fontSize:\"18px\"}}>(then i'll fetch the details about the author of the book, from goodread)</p>\r\n               <h4>grenre:</h4> <p style={{fontSize:\"18px\"}}>(then i'll add all the genre about the books that a user added to a list and save it to the user databse to display the taste of the user)</p>\r\n              </div>)}\r\n            </ul>\r\n           </h2>\r\n        </div>\r\n\r\n          <h2 style={{marginLeft:\"18px\",marginTop:\"30px\"}}>this is it for the first time when a user joins! </h2>\r\n          <p style={{marginLeft:\"18px\"}}>Now we'll work on the current activity of the user</p>\r\n\r\n          <div style={{position:\"relative\",marginTop:\"20px\",marginLeft:\"20px\"}} >\r\n          <input type=\"text\"  onChange={(e)=>this.setState({recent_book:e.target.value})}/> post the recent book that you've been reading or read <br/>\r\n            <Button primary  style={{marginTop:\"5px\"}} onClick={()=>this.setState({recent:true})}>Post</Button>\r\n          </div>\r\n\r\n              <div style={{marginLeft:\"18px\",marginTop:\"30px\"}}>\r\n              <h2 >and more !! like what made him read that book? </h2>\r\n              <h2>or 5 senctance about that book or rate that book </h2>\r\n              <p>add the ideas you got </p>\r\n              <h5>and make a beautiful front end, i feel exhausted on that </h5>\r\n              </div>\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\nexport default Skeleton;\r\n"]},"metadata":{},"sourceType":"module"}