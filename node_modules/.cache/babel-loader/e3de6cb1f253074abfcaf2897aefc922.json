{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\barot\\\\Documents\\\\GitHub\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\barot\\\\Documents\\\\GitHub\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\barot\\\\Documents\\\\GitHub\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\barot\\\\Documents\\\\GitHub\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\barot\\\\Documents\\\\GitHub\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\barot\\\\Documents\\\\GitHub\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\barot\\\\Documents\\\\GitHub\\\\BookSTack\\\\src\\\\components\\\\BookList.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n.app-card-list {\\ndisplay:inline-block;\\nwidth:100%;\\nfloat:right;\\nmargin:0;\\nmin-height: 75vh;\\nwhite-space:normal;\\noverflow-x: scroll;\\nmargin-top:-70px;\\n\\n&::-webkit-scrollbar {\\n  display: none;\\n}\\n\\n@media(min-width:768px) {\\n    width:80%;\\n    white-space:nowrap;\\n    margin-top: 0;\\n}\\n\\n.card {\\n  margin: 60px 30px;\\n  display: inline-block;\\n\\n  .card-body {\\n      white-space: normal;\\n  }\\n}\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { graphql } from 'react-apollo';\nimport { getBooksQuery } from '../queries/queries';\nimport Card from \"./body/card\";\nimport styled, { css } from 'styled-components';\nimport BookDetails from './BookDetails';\nvar card = styled.Card(_templateObject());\n\nvar BookList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BookList, _Component);\n\n  function BookList(props) {\n    _classCallCheck(this, BookList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BookList).call(this, props));\n  }\n\n  _createClass(BookList, [{\n    key: \"displayBooks\",\n    value: function displayBooks() {\n      var data = this.props.data;\n\n      try {\n        if (data.loading) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, \"Loading books...\");\n        } else {\n          return data.books.map(function (book) {\n            return React.createElement(\"card\", {\n              id: book.id,\n              title: book.title,\n              description: book.description,\n              ts: book.textSnippet,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 52\n              },\n              __self: this\n            })\n            /*<li key={ book.id } onClick={ (e) =>\r\n              this.setState({ selected: book.id })\r\n            }>\r\n            { book.title }\r\n            </li>*/\n            ;\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, this.displayBooks());\n    }\n  }]);\n\n  return BookList;\n}(Component);\n\nexport default graphql(getBooksQuery, {\n  options: function options(props) {\n    return {\n      variables: {\n        search: props.search,\n        howmany: 25\n      }\n    };\n  }\n})(BookList);","map":{"version":3,"sources":["C:\\Users\\barot\\Documents\\GitHub\\BookSTack\\src\\components\\BookList.js"],"names":["React","Component","graphql","getBooksQuery","Card","styled","css","BookDetails","card","BookList","props","data","loading","books","map","book","id","title","description","textSnippet","err","console","log","displayBooks","options","variables","search","howmany"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,IAAMC,IAAI,GAAGH,MAAM,CAACD,IAAV,mBAAV;;IAiCMK,Q;;;;;AACF,oBAAYC,KAAZ,EAAkB;AAAA;;AAAA,iFACRA,KADQ;AAEjB;;;;mCACa;AACV,UAAIC,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAtB;;AACA,UAAG;AACC,YAAGA,IAAI,CAACC,OAAR,EAAgB;AAAC,iBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAR;AAAuC,SAAxD,MACO;AACA,iBAAOD,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAe,UAAAC,IAAI,EAAI;AACzB,mBACE;AACE,cAAA,EAAE,EAAEA,IAAI,CAACC,EADX;AAEE,cAAA,KAAK,EAAED,IAAI,CAACE,KAFd;AAGE,cAAA,WAAW,EAAEF,IAAI,CAACG,WAHpB;AAIE,cAAA,EAAE,EAAEH,IAAI,CAACI,WAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;AAPF;AAcH,WAfK,CAAP;AAgBF;AACJ,OApBL,CAqBA,OAAMC,GAAN,EAAU;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAkB;AAEhC;;;6BACO;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKG,YAAL,EADJ,CADJ;AAKH;;;;EApCkBtB,S;;AAuCvB,eAAeC,OAAO,CAACC,aAAD,EAAe;AACnCqB,EAAAA,OAAO,EAAE,iBAACd,KAAD,EAAS;AAChB,WAAM;AACFe,MAAAA,SAAS,EAAC;AACRC,QAAAA,MAAM,EAAChB,KAAK,CAACgB,MADL;AAERC,QAAAA,OAAO,EAAE;AAFD;AADR,KAAN;AAMD;AARkC,CAAf,CAAP,CASZlB,QATY,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { graphql } from 'react-apollo';\r\nimport { getBooksQuery } from '../queries/queries';\r\nimport Card from \"./body/card\"\r\nimport styled, { css } from 'styled-components'\r\nimport BookDetails from './BookDetails';\r\n\r\nconst card = styled.Card `\r\n.app-card-list {\r\ndisplay:inline-block;\r\nwidth:100%;\r\nfloat:right;\r\nmargin:0;\r\nmin-height: 75vh;\r\nwhite-space:normal;\r\noverflow-x: scroll;\r\nmargin-top:-70px;\r\n\r\n&::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n\r\n@media(min-width:768px) {\r\n    width:80%;\r\n    white-space:nowrap;\r\n    margin-top: 0;\r\n}\r\n\r\n.card {\r\n  margin: 60px 30px;\r\n  display: inline-block;\r\n\r\n  .card-body {\r\n      white-space: normal;\r\n  }\r\n}\r\n}\r\n`;\r\n\r\n\r\nclass BookList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    displayBooks(){\r\n        var data = this.props.data;\r\n        try{\r\n            if(data.loading){return( <div>Loading books...</div> );}\r\n              else {\r\n                   return data.books.map(book => {\r\n                        return(\r\n                          <card\r\n                            id={book.id}\r\n                            title={book.title}\r\n                            description={book.description}\r\n                            ts={book.textSnippet}\r\n                          />\r\n                          /*<li key={ book.id } onClick={ (e) =>\r\n                            this.setState({ selected: book.id })\r\n                          }>\r\n                          { book.title }\r\n                          </li>*/\r\n\r\n                        );\r\n                    })\r\n                }\r\n            }\r\n        catch(err){console.log(err);}\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n              { this.displayBooks() }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default graphql(getBooksQuery,{\r\n  options: (props)=>{\r\n    return{\r\n        variables:{\r\n          search:props.search,\r\n          howmany: 25\r\n        }\r\n    }\r\n  }\r\n})(BookList);\r\n"]},"metadata":{},"sourceType":"module"}