{"ast":null,"code":"import _classCallCheck from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\src\\\\auth\\\\login.js\";\nimport React from \"react\";\nimport firebase from \"firebase\";\nimport { Link } from 'react-router-dom'; //styles\n\nimport 'antd/dist/antd.css';\nimport { Form, Icon, Input, Button, Checkbox, Tooltip } from 'antd'; //auth\n\nvar config = {\n  apiKey: \"AIzaSyBdD-dZnTara6z3jjKOENeqWQJz8Lk53jQ\",\n  authDomain: \"fir-auth-b1ee0.firebaseapp.com\"\n};\nfirebase.initializeApp(config);\n\nvar FLogin =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FLogin, _React$Component);\n\n  function FLogin() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FLogin);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FLogin)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isSignedIn: false,\n      modal: \"login\",\n      confirmDirty: false,\n      autoCompleteResult: [],\n      dismiss: \"none\",\n      LoginerrorMessage: \" \",\n      SignuperrorMessage: \" \"\n    };\n\n    _this.handleSubmitLogin = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          firebase.auth().signInWithEmailAndPassword(values.userName, values.password).then(function (user) {\n            var data = user.user;\n\n            _this.setState({\n              isSignedIn: true,\n              LoginerrorMessage: \" \"\n            });\n\n            return _this.props.setStates(data);\n          }).catch(function (error) {\n            // Handle Errors here.\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            console.log(errorMessage);\n\n            _this.setState({\n              LoginerrorMessage: \"Sorryy! gievn email or password didnt match ,try forgot password if you need help resetting\"\n            });\n          });\n        }\n      });\n    };\n\n    _this.handleSubmitSignup = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          console.log(values.email + values.password + values.nickname);\n          var promise = new Promise(function (resolve, reject) {\n            return resolve(firebase.auth().createUserWithEmailAndPassword(values.email, values.password));\n          });\n          promise.then(function (user) {\n            user.updateProfile({\n              displayName: values.nickname,\n              photoURL: \"https://cdn.dribbble.com/users/199982/screenshots/4044699/furkan-avatar-dribbble.png\"\n            }).then(function () {// Update successful.\n            }).catch(function (error) {// An error happened.\n            });\n\n            _this.setState({\n              SignuperrorMessage: \" \",\n              modal: \"login\"\n            });\n          }).catch(function (error) {\n            // Handle Errors here.\n            var errorCode = error.code;\n            var errorMessage = error.message;\n\n            _this.setState({\n              SignuperrorMessage: errorMessage\n            });\n          });\n        }\n      });\n    };\n\n    _this.compareToFirstPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n\n    _this.validateToNextPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && _this.state.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    _this.displaySignup = function () {\n      return _this.setState({\n        modal: \"signup\"\n      });\n    };\n\n    _this.displayLogin = function () {\n      return _this.setState({\n        modal: \"login\"\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(FLogin, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var autoCompleteResult = this.state.autoCompleteResult;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 8\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 16\n          }\n        }\n      };\n      var tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 16,\n            offset: 8\n          }\n        }\n      };\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, this.state.isSignedIn), this.state.modal === \"login\" ? React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"modal-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        class: \"modal-title\",\n        id: \"exampleModalCenterTitle\",\n        style: {\n          margin: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"button\", {\n        type: \"button\",\n        class: \"close\",\n        \"data-dismiss\": \"modal\",\n        \"aria-label\": \"Close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"\\xD7\"))), React.createElement(\"div\", {\n        class: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmitLogin,\n        style: {\n          maxWidth: \"300px\",\n          margin: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, getFieldDecorator('userName', {\n        rules: [{\n          type: 'email',\n          message: 'The input is not valid E-mail!'\n        }, {\n          required: true,\n          message: 'Please input your E-mail!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }),\n        placeholder: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your Password!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, getFieldDecorator('remember', {\n        valuePropName: 'checked',\n        initialValue: true\n      })(React.createElement(Checkbox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Remember me\")), React.createElement(\"a\", {\n        atyle: {\n          float: \"right\"\n        },\n        href: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Forgot password\"), React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        style: {\n          width: \"100%\"\n        },\n        \"data-dismiss\": this.state.dismiss,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Log in\"), \"Or \", React.createElement(\"a\", {\n        onClick: this.displaySignup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"register now!\")), this.state.LoginerrorMessage))) : React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"modal-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        class: \"modal-title\",\n        id: \"exampleModalCenterTitle\",\n        style: {\n          margin: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"Signup\"), React.createElement(\"button\", {\n        type: \"button\",\n        class: \"close\",\n        \"data-dismiss\": \"modal\",\n        \"aria-label\": \"Close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"\\xD7\"))), React.createElement(\"div\", {\n        class: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(Form, Object.assign({}, formItemLayout, {\n        onSubmit: this.handleSubmitSignup,\n        style: {\n          maxWidth: \"400px\",\n          margin: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(Form.Item, {\n        label: \"E-mail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, getFieldDecorator('email', {\n        rules: [{\n          type: 'email',\n          message: 'The input is not valid E-mail!'\n        }, {\n          required: true,\n          message: 'Please input your E-mail!'\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }, {\n          validator: this.validateToNextPassword\n        }]\n      })(React.createElement(Input, {\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Confirm Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, getFieldDecorator('confirm', {\n        rules: [{\n          required: true,\n          message: 'Please confirm your password!'\n        }, {\n          validator: this.compareToFirstPassword\n        }]\n      })(React.createElement(Input, {\n        type: \"password\",\n        onBlur: this.handleConfirmBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        }, \"Displayname\\xA0\", React.createElement(Tooltip, {\n          title: \"What do you want others to call you?\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"question-circle-o\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, getFieldDecorator('nickname', {\n        rules: [{\n          required: true,\n          message: 'Please input your Displayname!',\n          whitespace: true\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }))), React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }), getFieldDecorator('agreement', {\n        valuePropName: 'checked'\n      })(React.createElement(Checkbox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"I have read the \", React.createElement(\"a\", {\n        href: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"agreement\")))), React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \"Register\"), \"Already have an accout? \", React.createElement(\"a\", {\n        onClick: this.displayLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"sign in  now!\")), this.state.SignuperrorMessage))), React.createElement(\"div\", {\n        class: \"modal-footer\",\n        style: {\n          margin: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \"Google\"), React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, \"Facebook\"), React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"Github\"), React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \"LinkedIn\")));\n    }\n  }]);\n\n  return FLogin;\n}(React.Component);\n\nvar WrappedLoginForm = Form.create({\n  name: 'firebase_login'\n})(FLogin);\nexport default WrappedLoginForm;","map":{"version":3,"sources":["D:\\Projects\\BookStack\\BookSTack\\src\\auth\\login.js"],"names":["React","firebase","Link","Form","Icon","Input","Button","Checkbox","Tooltip","config","apiKey","authDomain","initializeApp","FLogin","state","isSignedIn","modal","confirmDirty","autoCompleteResult","dismiss","LoginerrorMessage","SignuperrorMessage","handleSubmitLogin","e","preventDefault","props","form","validateFields","err","values","auth","signInWithEmailAndPassword","userName","password","then","user","data","setState","setStates","catch","error","errorCode","code","errorMessage","message","console","log","handleSubmitSignup","validateFieldsAndScroll","email","nickname","promise","Promise","resolve","reject","createUserWithEmailAndPassword","updateProfile","displayName","photoURL","compareToFirstPassword","rule","value","callback","getFieldValue","validateToNextPassword","force","displaySignup","displayLogin","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","margin","maxWidth","rules","type","required","color","valuePropName","initialValue","float","width","validator","handleConfirmBlur","whitespace","Component","WrappedLoginForm","create","name"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport firebase from \"firebase\"\r\nimport { Link } from 'react-router-dom'\r\n\r\n//styles\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n  Form, Icon, Input, Button, Checkbox,Tooltip\r\n} from 'antd';\r\n\r\n\r\n//auth\r\nvar config = {\r\n apiKey: \"AIzaSyBdD-dZnTara6z3jjKOENeqWQJz8Lk53jQ\",\r\n authDomain: \"fir-auth-b1ee0.firebaseapp.com\",\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nclass FLogin extends React.Component{\r\n\r\nstate = {\r\n  isSignedIn: false,\r\n  modal:\"login\",\r\n  confirmDirty: false,\r\n  autoCompleteResult: [],\r\n  dismiss:\"none\",\r\n  LoginerrorMessage:\" \",\r\n  SignuperrorMessage:\" \"\r\n}\r\n\r\n\r\nhandleSubmitLogin = (e) => {\r\n  e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n          if (!err) {\r\n\r\n            firebase.auth().signInWithEmailAndPassword(values.userName, values.password)\r\n            .then(user=>{let data=user.user\r\n               this.setState({isSignedIn:true,\r\n                              LoginerrorMessage:\" \",\r\n                              })\r\n             return this.props.setStates(data) })\r\n            .catch(error=> {\r\n              // Handle Errors here.\r\n              var errorCode = error.code;\r\n              var errorMessage = error.message;\r\n              console.log(errorMessage);\r\n              this.setState({\r\n                LoginerrorMessage:\"Sorryy! gievn email or password didnt match ,try forgot password if you need help resetting\"\r\n              });\r\n\r\n            });\r\n          }\r\n        });\r\n\r\n\r\n      }\r\nhandleSubmitSignup = (e) => {\r\n  e.preventDefault();\r\n  this.props.form.validateFieldsAndScroll((err, values) => {\r\n    if (!err) {\r\n      console.log(values.email + values.password+values.nickname);\r\n    var promise= new Promise((resolve,reject)=>resolve(firebase.auth().createUserWithEmailAndPassword(values.email, values.password)))\r\n    promise.then(user=>{\r\n          user.updateProfile({\r\n            displayName: values.nickname,\r\n              photoURL: \"https://cdn.dribbble.com/users/199982/screenshots/4044699/furkan-avatar-dribbble.png\"\r\n          }).then(function() {\r\n            // Update successful.\r\n          }).catch(function(error) {\r\n            // An error happened.\r\n          });\r\n          this.setState({SignuperrorMessage:\" \",\r\n                        modal:\"login\"})}  )\r\n    .catch(error=> {\r\n      // Handle Errors here.\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      this.setState({\r\n        SignuperrorMessage:errorMessage\r\n      });\r\n\r\n    });\r\n\r\n\r\n\r\n    }\r\n  });\r\n}\r\n\r\ncompareToFirstPassword = (rule, value, callback) => {\r\n  const form = this.props.form;\r\n  if (value && value !== form.getFieldValue('password')) {\r\n    callback('Two passwords that you enter is inconsistent!');\r\n  } else {\r\n    callback();\r\n  }\r\n}\r\n\r\nvalidateToNextPassword = (rule, value, callback) => {\r\n  const form = this.props.form;\r\n  if (value && this.state.confirmDirty) {\r\n    form.validateFields(['confirm'], { force: true });\r\n  }\r\n  callback();\r\n}\r\n\r\ndisplaySignup = ()=>{\r\n  return this.setState({modal:\"signup\"})\r\n}\r\ndisplayLogin = ()=>{\r\n  return this.setState({modal:\"login\"})\r\n}\r\n\r\n\r\n\r\n    render(){\r\n\r\n       const { getFieldDecorator } = this.props.form;\r\n        const { autoCompleteResult } = this.state;\r\n\r\n        const formItemLayout = {\r\n          labelCol: {\r\n            xs: { span: 24 },\r\n            sm: { span: 8 },\r\n          },\r\n          wrapperCol: {\r\n            xs: { span: 24 },\r\n            sm: { span: 16 },\r\n          },\r\n        };\r\n        const tailFormItemLayout = {\r\n          wrapperCol: {\r\n            xs: {\r\n              span: 24,\r\n              offset: 0,\r\n            },\r\n            sm: {\r\n              span: 16,\r\n              offset: 8,\r\n            },\r\n          },\r\n        };\r\n\r\n      return(\r\n        <React.Fragment>\r\n        <h1>{this.state.isSignedIn}</h1>\r\n        {\r\n          this.state.modal===\"login\" ?\r\n        <React.Fragment>\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"exampleModalCenterTitle\" style={{margin:\"auto\"}}>Login</h5>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n                            <Form onSubmit={this.handleSubmitLogin} style={{ maxWidth: \"300px\",margin:\"auto\"}}>\r\n                                 <Form.Item>\r\n                                   {getFieldDecorator('userName', {\r\n                                     rules: [{\r\n                                       type: 'email', message: 'The input is not valid E-mail!',\r\n                                     }, {\r\n                                       required: true, message: 'Please input your E-mail!',\r\n                                     }],\r\n                                   })(\r\n                                     <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}  placeholder=\"email\"/>\r\n                                   )}\r\n                                 </Form.Item>\r\n                                 <Form.Item>\r\n                                   {getFieldDecorator('password', {\r\n                                     rules: [{ required: true, message: 'Please input your Password!' }],\r\n                                   })(\r\n                                     <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\r\n                                   )}\r\n                                 </Form.Item>\r\n                                 <Form.Item>\r\n                                   {getFieldDecorator('remember', {\r\n                                     valuePropName: 'checked',\r\n                                     initialValue: true,\r\n                                   })(\r\n                                     <Checkbox>Remember me</Checkbox>\r\n                                   )}\r\n                                   <a atyle={{float: \"right\"}} href=\"\">Forgot password</a>\r\n                                <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\"  }} data-dismiss={this.state.dismiss}  >\r\n                                        Log in\r\n                                   </Button>\r\n                                   Or <a  onClick={this.displaySignup}>register now!</a>\r\n                                 </Form.Item>\r\n                                 {this.state.LoginerrorMessage}\r\n                          </Form>\r\n        </div>\r\n        </React.Fragment>\r\n        :\r\n        <React.Fragment>\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"exampleModalCenterTitle\" style={{margin:\"auto\"}}>Signup</h5>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n                             <Form {...formItemLayout} onSubmit={this.handleSubmitSignup}  style={{ maxWidth: \"400px\",margin:\"auto\"}}>\r\n                                <Form.Item\r\n                                  label=\"E-mail\"\r\n                                >\r\n                                  {getFieldDecorator('email', {\r\n                                    rules: [{\r\n                                      type: 'email', message: 'The input is not valid E-mail!',\r\n                                    }, {\r\n                                      required: true, message: 'Please input your E-mail!',\r\n                                    }],\r\n                                  })(\r\n                                    <Input />\r\n                                  )}\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                  label=\"Password\"\r\n                                >\r\n                                  {getFieldDecorator('password', {\r\n                                    rules: [{\r\n                                      required: true, message: 'Please input your password!',\r\n                                    }, {\r\n                                      validator: this.validateToNextPassword,\r\n                                    }],\r\n                                  })(\r\n                                    <Input type=\"password\" />\r\n                                  )}\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                  label=\"Confirm Password\"\r\n                                >\r\n                                  {getFieldDecorator('confirm', {\r\n                                    rules: [{\r\n                                      required: true, message: 'Please confirm your password!',\r\n                                    }, {\r\n                                      validator: this.compareToFirstPassword,\r\n                                    }],\r\n                                  })(\r\n                                    <Input type=\"password\" onBlur={this.handleConfirmBlur} />\r\n                                  )}\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                  label={(\r\n                                    <span>\r\n                                      Displayname&nbsp;\r\n                                      <Tooltip title=\"What do you want others to call you?\">\r\n                                        <Icon type=\"question-circle-o\" />\r\n                                      </Tooltip>\r\n                                    </span>\r\n                                  )}\r\n                                >\r\n                                  {getFieldDecorator('nickname', {\r\n                                    rules: [{ required: true, message: 'Please input your Displayname!', whitespace: true }],\r\n                                  })(\r\n                                    <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} />\r\n                                  )}\r\n                                </Form.Item>\r\n                                <Form.Item {...tailFormItemLayout}>\r\n                                  {getFieldDecorator('agreement', {\r\n                                    valuePropName: 'checked',\r\n                                  })(\r\n                                    <Checkbox>I have read the <a href=\"\">agreement</a></Checkbox>\r\n                                  )}\r\n                                </Form.Item>\r\n\r\n                                <Form.Item {...tailFormItemLayout}>\r\n                                 <Button type=\"primary\" htmlType=\"submit\"  style={{width: \"100%\"  }} >\r\n                                 Register</Button>\r\n                                 Already have an accout? <a  onClick={this.displayLogin}>sign in  now!</a>\r\n                               </Form.Item>\r\n\r\n                                  { this.state.SignuperrorMessage }\r\n                                </Form>\r\n        </div>\r\n        </React.Fragment>\r\n      }\r\n        <div class=\"modal-footer\" style={{margin:\"auto\"}}>\r\n        <button type=\"button\" class=\"btn btn-primary\">Google</button>\r\n        <button type=\"button\" class=\"btn btn-primary\">Facebook</button>\r\n        <button type=\"button\" class=\"btn btn-primary\">Github</button>\r\n        <button type=\"button\" class=\"btn btn-primary\">LinkedIn</button>\r\n        </div>\r\n\r\n      </React.Fragment>\r\n\r\n    );\r\n    }\r\n\r\n}\r\n\r\nconst WrappedLoginForm = Form.create({ name: 'firebase_login' })(FLogin);\r\n\r\nexport default WrappedLoginForm;\r\n"]},"metadata":{},"sourceType":"module"}