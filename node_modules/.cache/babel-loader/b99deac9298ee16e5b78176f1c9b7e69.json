{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\barot\\\\Documents\\\\GitHub\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n      query Book($id : ID ){\\n        book(id:$id){\\n          id\\n          title\\n          genre\\n          author\\n          description\\n          textSnippet\\n        }\\n      }\\n\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      query Books($search : String , $howmany : Int ){\\n        books(search : $search , howmany : $howmany){\\n          id\\n          title\\n          genre\\n          author\\n          description\\n          textSnippet\\n        }\\n      }\\n\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from 'apollo-boost'; // const getAuthorsQuery = gql`\n//     {\n//         authors {\n//             name\n//             id\n//         }\n//     }\n// `;\n\nexport var getBooksQuery = gql(_templateObject()); // const addBookMutation = gql`\n//     mutation AddBook($name: String!, $genre: String!, $authorId: ID!){\n//         addBook(name: $name, genre: $genre, authorId: $authorId){\n//             name\n//             id\n//         }\n//     }\n// `;\n\nexport var getBookQuery = gql(_templateObject2());","map":{"version":3,"sources":["C:\\Users\\barot\\Documents\\GitHub\\BookSTack\\src\\queries\\queries.js"],"names":["gql","getBooksQuery","getBookQuery"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,cAApB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,aAAa,GAAGD,GAAH,mBAAnB,C,CAcP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAME,YAAY,GAAGF,GAAH,oBAAlB","sourcesContent":["import { gql } from 'apollo-boost';\r\n\r\n// const getAuthorsQuery = gql`\r\n//     {\r\n//         authors {\r\n//             name\r\n//             id\r\n//         }\r\n//     }\r\n// `;\r\n\r\nexport const getBooksQuery = gql`\r\n      query Books($search : String , $howmany : Int ){\r\n        books(search : $search , howmany : $howmany){\r\n          id\r\n          title\r\n          genre\r\n          author\r\n          description\r\n          textSnippet\r\n        }\r\n      }\r\n\r\n`;\r\n\r\n// const addBookMutation = gql`\r\n//     mutation AddBook($name: String!, $genre: String!, $authorId: ID!){\r\n//         addBook(name: $name, genre: $genre, authorId: $authorId){\r\n//             name\r\n//             id\r\n//         }\r\n//     }\r\n// `;\r\n\r\nexport const getBookQuery = gql`\r\n      query Book($id : ID ){\r\n        book(id:$id){\r\n          id\r\n          title\r\n          genre\r\n          author\r\n          description\r\n          textSnippet\r\n        }\r\n      }\r\n\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}