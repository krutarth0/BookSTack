{"ast":null,"code":"import _classCallCheck from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\src\\\\auth\\\\login.js\";\nimport React from \"react\";\nimport firebase from \"firebase\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\"; //styles\n\nimport 'antd/dist/antd.css';\nimport { Form, Icon, Input, Button, Checkbox } from 'antd'; //auth\n\nvar config = {\n  apiKey: \"AIzaSyBdD-dZnTara6z3jjKOENeqWQJz8Lk53jQ\",\n  authDomain: \"fir-auth-b1ee0.firebaseapp.com\"\n};\nfirebase.initializeApp(config);\n\nvar FLogin =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FLogin, _React$Component);\n\n  function FLogin() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FLogin);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FLogin)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isSignedIn: false,\n      modal: \"login\"\n    };\n    _this.uiConfig = {\n      signInFlow: \"popup\",\n      signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID, firebase.auth.EmailAuthProvider.PROVIDER_ID],\n      callbacks: {\n        signInSuccess: function signInSuccess() {\n          return false;\n        }\n      }\n    };\n\n    _this.componentDidMount = function () {\n      firebase.auth().onAuthStateChanged(function (user) {\n        _this.setState({\n          isSignedIn: !!user\n        });\n\n        console.log(\"user\", user);\n      });\n    };\n\n    _this.handleSubmitLogin = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n\n    _this.handleSubmitSignup = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n\n    _this.compareToFirstPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n\n    _this.validateToNextPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && _this.state.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    _this.displaySignup = function () {\n      return _this.setState({\n        modal: \"signup\"\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(FLogin, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var autoCompleteResult = this.state.autoCompleteResult;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 8\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 16\n          }\n        }\n      };\n      console.log(this.state.modal);\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, this.state.modal == \"login\" ? React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"modal-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        class: \"modal-title\",\n        id: \"exampleModalCenterTitle\",\n        style: {\n          margin: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"button\", {\n        type: \"button\",\n        class: \"close\",\n        \"data-dismiss\": \"modal\",\n        \"aria-label\": \"Close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"\\xD7\"))), React.createElement(\"div\", {\n        class: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmitLogin,\n        style: {\n          maxWidth: \"300px\",\n          margin: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, getFieldDecorator('userName', {\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }),\n        placeholder: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your Password!'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, getFieldDecorator('remember', {\n        valuePropName: 'checked',\n        initialValue: true\n      })(React.createElement(Checkbox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Remember me\")), React.createElement(\"a\", {\n        atyle: {\n          float: \"right\"\n        },\n        href: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Forgot password\"), React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Log in\"), \"Or \", React.createElement(\"a\", {\n        onClick: this.displaySignup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"register now!\"))))) : React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"modal-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        class: \"modal-title\",\n        id: \"exampleModalCenterTitle\",\n        style: {\n          margin: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Signup\"), React.createElement(\"button\", {\n        type: \"button\",\n        class: \"close\",\n        \"data-dismiss\": \"modal\",\n        \"aria-label\": \"Close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"\\xD7\"))), React.createElement(\"div\", {\n        class: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Form, Object.assign({}, formItemLayout, {\n        onSubmit: this.handleSubmit,\n        style: {\n          maxWidth: \"300px\",\n          margin: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(Form.Item, {\n        label: \"E-mail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, getFieldDecorator('email', {\n        rules: [{\n          type: 'email',\n          message: 'The input is not valid E-mail!'\n        }, {\n          required: true,\n          message: 'Please input your E-mail!'\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }, {\n          validator: this.validateToNextPassword\n        }]\n      })(React.createElement(Input, {\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Confirm Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, getFieldDecorator('confirm', {\n        rules: [{\n          required: true,\n          message: 'Please confirm your password!'\n        }, {\n          validator: this.compareToFirstPassword\n        }]\n      })(React.createElement(Input, {\n        type: \"password\",\n        onBlur: this.handleConfirmBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      })))))), React.createElement(\"div\", {\n        class: \"modal-footer\",\n        style: {\n          margin: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-primary\",\n        \"data-dismiss\": \"modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Google\"), React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Facebook\"), React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"Github\"), React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"LinkedIn\")));\n    }\n  }]);\n\n  return FLogin;\n}(React.Component);\n\nvar WrappedLoginForm = Form.create({\n  name: 'firebase_login'\n})(FLogin);\nexport default WrappedLoginForm;","map":{"version":3,"sources":["D:\\Projects\\BookStack\\BookSTack\\src\\auth\\login.js"],"names":["React","firebase","StyledFirebaseAuth","Form","Icon","Input","Button","Checkbox","config","apiKey","authDomain","initializeApp","FLogin","state","isSignedIn","modal","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","EmailAuthProvider","callbacks","signInSuccess","componentDidMount","onAuthStateChanged","user","setState","console","log","handleSubmitLogin","e","preventDefault","props","form","validateFields","err","values","handleSubmitSignup","validateFieldsAndScroll","compareToFirstPassword","rule","value","callback","getFieldValue","validateToNextPassword","confirmDirty","force","displaySignup","getFieldDecorator","autoCompleteResult","formItemLayout","labelCol","xs","span","sm","wrapperCol","margin","maxWidth","rules","required","message","color","valuePropName","initialValue","float","width","handleSubmit","type","validator","handleConfirmBlur","Component","WrappedLoginForm","create","name"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,kBAAP,MAA+B,qCAA/B,C,CAEA;;AACA,OAAO,oBAAP;AACA,SACEC,IADF,EACQC,IADR,EACcC,KADd,EACqBC,MADrB,EAC6BC,QAD7B,QAEO,MAFP,C,CAKA;;AACA,IAAIC,MAAM,GAAG;AACZC,EAAAA,MAAM,EAAE,yCADI;AAEZC,EAAAA,UAAU,EAAE;AAFA,CAAb;AAIAT,QAAQ,CAACU,aAAT,CAAuBH,MAAvB;;IAGMI,M;;;;;;;;;;;;;;;;;UAENC,K,GAAQ;AACNC,MAAAA,UAAU,EAAE,KADN;AAENC,MAAAA,KAAK,EAAC;AAFA,K;UAIRC,Q,GAAW;AACDC,MAAAA,UAAU,EAAE,OADX;AAEDC,MAAAA,aAAa,EAAE,CACbjB,QAAQ,CAACkB,IAAT,CAAcC,kBAAd,CAAiCC,WADpB,EAEbpB,QAAQ,CAACkB,IAAT,CAAcG,iBAAd,CAAgCD,WAFnB,CAFd;AAMDE,MAAAA,SAAS,EAAE;AACTC,QAAAA,aAAa,EAAE;AAAA,iBAAM,KAAN;AAAA;AADN;AANV,K;;UAWXC,iB,GAAoB,YAAM;AAChBxB,MAAAA,QAAQ,CAACkB,IAAT,GAAgBO,kBAAhB,CAAmC,UAAAC,IAAI,EAAI;AACzC,cAAKC,QAAL,CAAc;AAAEd,UAAAA,UAAU,EAAE,CAAC,CAACa;AAAhB,SAAd;;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,IAApB;AACD,OAHD;AAID,K;;UAGTI,iB,GAAoB,UAACC,CAAD,EAAO;AACnBA,MAAAA,CAAC,CAACC,cAAF;;AACA,YAAKC,KAAL,CAAWC,IAAX,CAAgBC,cAAhB,CAA+B,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAC9C,YAAI,CAACD,GAAL,EAAU;AACRR,UAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCQ,MAAzC;AACD;AACF,OAJD;AAKD,K;;UACPC,kB,GAAqB,UAACP,CAAD,EAAO;AAC1BA,MAAAA,CAAC,CAACC,cAAF;;AACA,YAAKC,KAAL,CAAWC,IAAX,CAAgBK,uBAAhB,CAAwC,UAACH,GAAD,EAAMC,MAAN,EAAiB;AACvD,YAAI,CAACD,GAAL,EAAU;AACRR,UAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCQ,MAAzC;AACD;AACF,OAJD;AAKD,K;;UAEDG,sB,GAAyB,UAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,EAA2B;AAClD,UAAMT,IAAI,GAAG,MAAKD,KAAL,CAAWC,IAAxB;;AACA,UAAIQ,KAAK,IAAIA,KAAK,KAAKR,IAAI,CAACU,aAAL,CAAmB,UAAnB,CAAvB,EAAuD;AACrDD,QAAAA,QAAQ,CAAC,+CAAD,CAAR;AACD,OAFD,MAEO;AACLA,QAAAA,QAAQ;AACT;AACF,K;;UAEDE,sB,GAAyB,UAACJ,IAAD,EAAOC,KAAP,EAAcC,QAAd,EAA2B;AAClD,UAAMT,IAAI,GAAG,MAAKD,KAAL,CAAWC,IAAxB;;AACA,UAAIQ,KAAK,IAAI,MAAK9B,KAAL,CAAWkC,YAAxB,EAAsC;AACpCZ,QAAAA,IAAI,CAACC,cAAL,CAAoB,CAAC,SAAD,CAApB,EAAiC;AAAEY,UAAAA,KAAK,EAAE;AAAT,SAAjC;AACD;;AACDJ,MAAAA,QAAQ;AACT,K;;UAEDK,a,GAAgB,YAAI;AAClB,aAAO,MAAKrB,QAAL,CAAc;AAACb,QAAAA,KAAK,EAAC;AAAP,OAAd,CAAP;AACD,K;;;;;;;6BAEW;AAAA,UACGmC,iBADH,GACyB,KAAKhB,KAAL,CAAWC,IADpC,CACGe,iBADH;AAAA,UAEIC,kBAFJ,GAE2B,KAAKtC,KAFhC,CAEIsC,kBAFJ;AAIJ,UAAMC,cAAc,GAAG;AACrBC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,EAAE,EAAE;AAAEC,YAAAA,IAAI,EAAE;AAAR,WADI;AAERC,UAAAA,EAAE,EAAE;AAAED,YAAAA,IAAI,EAAE;AAAR;AAFI,SADW;AAKrBE,QAAAA,UAAU,EAAE;AACVH,UAAAA,EAAE,EAAE;AAAEC,YAAAA,IAAI,EAAE;AAAR,WADM;AAEVC,UAAAA,EAAE,EAAE;AAAED,YAAAA,IAAI,EAAE;AAAR;AAFM;AALS,OAAvB;AAUD1B,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWE,KAAvB;AACD,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,KAAKF,KAAL,CAAWE,KAAX,IAAkB,OAAlB,GACF,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,KAAK,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAC,aAAV;AAAwB,QAAA,EAAE,EAAC,yBAA3B;AAAqD,QAAA,KAAK,EAAE;AAAC2C,UAAAA,MAAM,EAAC;AAAR,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,OAA5B;AAAoC,wBAAa,OAAjD;AAAyD,sBAAW,OAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,uBAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAFF,CADA,EAOA;AAAK,QAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACoB,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAK3B,iBAArB;AAAwC,QAAA,KAAK,EAAE;AAAE4B,UAAAA,QAAQ,EAAE,OAAZ;AAAoBD,UAAAA,MAAM,EAAC;AAA3B,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGR,iBAAiB,CAAC,UAAD,EAAa;AAC7BU,QAAAA,KAAK,EAAE,CAAC;AAAEC,UAAAA,QAAQ,EAAE,IAAZ;AAAkBC,UAAAA,OAAO,EAAE;AAA3B,SAAD;AADsB,OAAb,CAAjB,CAGC,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAkB,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAf;AAA0E,QAAA,WAAW,EAAC,UAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHD,CADH,CADL,EAQK,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGb,iBAAiB,CAAC,UAAD,EAAa;AAC7BU,QAAAA,KAAK,EAAE,CAAC;AAAEC,UAAAA,QAAQ,EAAE,IAAZ;AAAkBC,UAAAA,OAAO,EAAE;AAA3B,SAAD;AADsB,OAAb,CAAjB,CAGC,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAkB,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAf;AAA0E,QAAA,IAAI,EAAC,UAA/E;AAA0F,QAAA,WAAW,EAAC,UAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHD,CADH,CARL,EAeK,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGb,iBAAiB,CAAC,UAAD,EAAa;AAC7Bc,QAAAA,aAAa,EAAE,SADc;AAE7BC,QAAAA,YAAY,EAAE;AAFe,OAAb,CAAjB,CAIC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJD,CADH,EAOE;AAAG,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR,SAAV;AAA4B,QAAA,IAAI,EAAC,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAPF,EAQE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAAyC,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,SAWK;AAAI,QAAA,OAAO,EAAE,KAAKlB,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAXL,CAfL,CADpB,CAPA,CADE,GAyCF,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,KAAK,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAC,aAAV;AAAwB,QAAA,EAAE,EAAC,yBAA3B;AAAqD,QAAA,KAAK,EAAE;AAACS,UAAAA,MAAM,EAAC;AAAR,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,OAA5B;AAAoC,wBAAa,OAAjD;AAAyD,sBAAW,OAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,uBAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAFF,CADA,EAOA;AAAK,QAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACqB,oBAAC,IAAD,oBAAUN,cAAV;AAA0B,QAAA,QAAQ,EAAE,KAAKgB,YAAzC;AAAwD,QAAA,KAAK,EAAE;AAAET,UAAAA,QAAQ,EAAE,OAAZ;AAAoBD,UAAAA,MAAM,EAAC;AAA3B,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACG,oBAAC,IAAD,CAAM,IAAN;AACE,QAAA,KAAK,EAAC,QADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGGR,iBAAiB,CAAC,OAAD,EAAU;AAC1BU,QAAAA,KAAK,EAAE,CAAC;AACNS,UAAAA,IAAI,EAAE,OADA;AACSP,UAAAA,OAAO,EAAE;AADlB,SAAD,EAEJ;AACDD,UAAAA,QAAQ,EAAE,IADT;AACeC,UAAAA,OAAO,EAAE;AADxB,SAFI;AADmB,OAAV,CAAjB,CAOC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPD,CAHH,CADH,EAcG,oBAAC,IAAD,CAAM,IAAN;AACE,QAAA,KAAK,EAAC,UADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGGZ,iBAAiB,CAAC,UAAD,EAAa;AAC7BU,QAAAA,KAAK,EAAE,CAAC;AACNC,UAAAA,QAAQ,EAAE,IADJ;AACUC,UAAAA,OAAO,EAAE;AADnB,SAAD,EAEJ;AACDQ,UAAAA,SAAS,EAAE,KAAKxB;AADf,SAFI;AADsB,OAAb,CAAjB,CAOC,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPD,CAHH,CAdH,EA2BG,oBAAC,IAAD,CAAM,IAAN;AACE,QAAA,KAAK,EAAC,kBADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGGI,iBAAiB,CAAC,SAAD,EAAY;AAC5BU,QAAAA,KAAK,EAAE,CAAC;AACNC,UAAAA,QAAQ,EAAE,IADJ;AACUC,UAAAA,OAAO,EAAE;AADnB,SAAD,EAEJ;AACDQ,UAAAA,SAAS,EAAE,KAAK7B;AADf,SAFI;AADqB,OAAZ,CAAjB,CAOC,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,MAAM,EAAE,KAAK8B,iBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPD,CAHH,CA3BH,CADrB,CAPA,CA3CA,EA+FA;AAAK,QAAA,KAAK,EAAC,cAAX;AAA0B,QAAA,KAAK,EAAE;AAACb,UAAAA,MAAM,EAAC;AAAR,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,iBAA5B;AAA8C,wBAAa,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,EAEA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,iBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA,EAGA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,iBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA,EAIA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,iBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJA,CA/FA,CADF;AA0GD;;;;EAxLgB1D,KAAK,CAACwE,S;;AA4L3B,IAAMC,gBAAgB,GAAGtE,IAAI,CAACuE,MAAL,CAAY;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAZ,EAAwC/D,MAAxC,CAAzB;AAEA,eAAe6D,gBAAf","sourcesContent":["import React from \"react\"\r\nimport firebase from \"firebase\"\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\"\r\n\r\n//styles\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n  Form, Icon, Input, Button, Checkbox,\r\n} from 'antd';\r\n\r\n\r\n//auth\r\nvar config = {\r\n apiKey: \"AIzaSyBdD-dZnTara6z3jjKOENeqWQJz8Lk53jQ\",\r\n authDomain: \"fir-auth-b1ee0.firebaseapp.com\",\r\n};\r\nfirebase.initializeApp(config);\r\n\r\n\r\nclass FLogin extends React.Component{\r\n\r\nstate = {\r\n  isSignedIn: false,\r\n  modal:\"login\"\r\n}\r\nuiConfig = {\r\n          signInFlow: \"popup\",\r\n          signInOptions: [\r\n            firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n            firebase.auth.EmailAuthProvider.PROVIDER_ID\r\n          ],\r\n          callbacks: {\r\n            signInSuccess: () => false\r\n          }\r\n        }\r\n\r\ncomponentDidMount = () => {\r\n          firebase.auth().onAuthStateChanged(user => {\r\n            this.setState({ isSignedIn: !!user })\r\n            console.log(\"user\", user)\r\n          })\r\n        }\r\n\r\n\r\nhandleSubmitLogin = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n          if (!err) {\r\n            console.log('Received values of form: ', values);\r\n          }\r\n        });\r\n      }\r\nhandleSubmitSignup = (e) => {\r\n  e.preventDefault();\r\n  this.props.form.validateFieldsAndScroll((err, values) => {\r\n    if (!err) {\r\n      console.log('Received values of form: ', values);\r\n    }\r\n  });\r\n}\r\n\r\ncompareToFirstPassword = (rule, value, callback) => {\r\n  const form = this.props.form;\r\n  if (value && value !== form.getFieldValue('password')) {\r\n    callback('Two passwords that you enter is inconsistent!');\r\n  } else {\r\n    callback();\r\n  }\r\n}\r\n\r\nvalidateToNextPassword = (rule, value, callback) => {\r\n  const form = this.props.form;\r\n  if (value && this.state.confirmDirty) {\r\n    form.validateFields(['confirm'], { force: true });\r\n  }\r\n  callback();\r\n}\r\n\r\ndisplaySignup = ()=>{\r\n  return this.setState({modal:\"signup\"})\r\n}\r\n\r\n    render(){\r\n       const { getFieldDecorator } = this.props.form;\r\n        const { autoCompleteResult } = this.state;\r\n\r\n        const formItemLayout = {\r\n          labelCol: {\r\n            xs: { span: 24 },\r\n            sm: { span: 8 },\r\n          },\r\n          wrapperCol: {\r\n            xs: { span: 24 },\r\n            sm: { span: 16 },\r\n          },\r\n        };\r\n       console.log(this.state.modal)\r\n      return(\r\n        <React.Fragment>\r\n        {\r\n          this.state.modal==\"login\" ?\r\n        <React.Fragment>\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"exampleModalCenterTitle\" style={{margin:\"auto\"}}>Login</h5>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n                            <Form onSubmit={this.handleSubmitLogin} style={{ maxWidth: \"300px\",margin:\"auto\"}}>\r\n                                 <Form.Item>\r\n                                   {getFieldDecorator('userName', {\r\n                                     rules: [{ required: true, message: 'Please input your username!' }],\r\n                                   })(\r\n                                     <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\r\n                                   )}\r\n                                 </Form.Item>\r\n                                 <Form.Item>\r\n                                   {getFieldDecorator('password', {\r\n                                     rules: [{ required: true, message: 'Please input your Password!' }],\r\n                                   })(\r\n                                     <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\r\n                                   )}\r\n                                 </Form.Item>\r\n                                 <Form.Item>\r\n                                   {getFieldDecorator('remember', {\r\n                                     valuePropName: 'checked',\r\n                                     initialValue: true,\r\n                                   })(\r\n                                     <Checkbox>Remember me</Checkbox>\r\n                                   )}\r\n                                   <a atyle={{float: \"right\"}} href=\"\">Forgot password</a>\r\n                                   <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\"  }}>\r\n                                     Log in\r\n                                   </Button>\r\n                                   Or <a  onClick={this.displaySignup}>register now!</a>\r\n                                 </Form.Item>\r\n                          </Form>\r\n        </div>\r\n        </React.Fragment>\r\n        :\r\n        <React.Fragment>\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"exampleModalCenterTitle\" style={{margin:\"auto\"}}>Signup</h5>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n                             <Form {...formItemLayout} onSubmit={this.handleSubmit}  style={{ maxWidth: \"300px\",margin:\"auto\"}}>\r\n                                <Form.Item\r\n                                  label=\"E-mail\"\r\n                                >\r\n                                  {getFieldDecorator('email', {\r\n                                    rules: [{\r\n                                      type: 'email', message: 'The input is not valid E-mail!',\r\n                                    }, {\r\n                                      required: true, message: 'Please input your E-mail!',\r\n                                    }],\r\n                                  })(\r\n                                    <Input />\r\n                                  )}\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                  label=\"Password\"\r\n                                >\r\n                                  {getFieldDecorator('password', {\r\n                                    rules: [{\r\n                                      required: true, message: 'Please input your password!',\r\n                                    }, {\r\n                                      validator: this.validateToNextPassword,\r\n                                    }],\r\n                                  })(\r\n                                    <Input type=\"password\" />\r\n                                  )}\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                  label=\"Confirm Password\"\r\n                                >\r\n                                  {getFieldDecorator('confirm', {\r\n                                    rules: [{\r\n                                      required: true, message: 'Please confirm your password!',\r\n                                    }, {\r\n                                      validator: this.compareToFirstPassword,\r\n                                    }],\r\n                                  })(\r\n                                    <Input type=\"password\" onBlur={this.handleConfirmBlur} />\r\n                                  )}\r\n                                </Form.Item>\r\n                                </Form>\r\n        </div>\r\n        </React.Fragment>\r\n      }\r\n        <div class=\"modal-footer\" style={{margin:\"auto\"}}>\r\n        <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">Google</button>\r\n        <button type=\"button\" class=\"btn btn-primary\">Facebook</button>\r\n        <button type=\"button\" class=\"btn btn-primary\">Github</button>\r\n        <button type=\"button\" class=\"btn btn-primary\">LinkedIn</button>\r\n        </div>\r\n\r\n      </React.Fragment>\r\n\r\n    );\r\n    }\r\n\r\n}\r\n\r\nconst WrappedLoginForm = Form.create({ name: 'firebase_login' })(FLogin);\r\n\r\nexport default WrappedLoginForm;\r\n"]},"metadata":{},"sourceType":"module"}