{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\barot\\\\Documents\\\\GitHub\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\barot\\\\Documents\\\\GitHub\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\barot\\\\Documents\\\\GitHub\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\barot\\\\Documents\\\\GitHub\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\barot\\\\Documents\\\\GitHub\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\barot\\\\Documents\\\\GitHub\\\\BookSTack\\\\src\\\\components\\\\BookDetails.js\";\nimport React, { Component, Fragments } from 'react';\nimport { graphql } from 'react-apollo';\nimport { getBookQuery } from '../queries/queries';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\"; // @material-ui/icons\n\nimport Close from \"@material-ui/icons/Close\"; // core components\n\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport modalStyle from \"assets/jss/material-dashboard-pro-react/modalStyle.jsx\";\n\nfunction Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"down\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n}\n\nvar BookDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BookDetails, _Component);\n\n  function BookDetails(props) {\n    var _this;\n\n    _classCallCheck(this, BookDetails);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BookDetails).call(this, props));\n    _this.state = {\n      modal: false\n    };\n    return _this;\n  }\n\n  _createClass(BookDetails, [{\n    key: \"handleClickOpen\",\n    value: function handleClickOpen(modal) {\n      var x = [];\n      x[modal] = true;\n      this.setState(x);\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose(modal) {\n      var x = [];\n      x[modal] = false;\n      this.setState(x);\n    }\n  }, {\n    key: \"displayBookDetails\",\n    value: function displayBookDetails() {\n      var book = this.props.data.book;\n\n      try {\n        if (this.props.bookId) {\n          return React.createElement(\"div\", {\n            className: \"site-font\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, book.title), React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, \"genre : \"), book.genre !== null ? book.genre.map(function (item) {\n            return React.createElement(\"p\", {\n              key: \"item1\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 54\n              },\n              __self: this\n            }, item);\n          }) : React.createElement(\"p\", {\n            key: \"item1\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, \"no genre found\"), React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, \"author : \"), book.author !== null ? book.author.map(function (item) {\n            return React.createElement(\"p\", {\n              key: \"item2\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 59\n              },\n              __self: this\n            }, item);\n          }) : React.createElement(\"p\", {\n            key: \"item2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, \"no detail about author\"), React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, \"description\"), book.description !== null ? React.createElement(\"p\", {\n            key: \"item3\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, book.description) : React.createElement(\"p\", {\n            key: \"item3\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, \" no description\"), \"//from final return next 3 lines\", React.createElement(\"div\", {\n            id: \"book-details\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, this.displayBookDetails()));\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, {\n    key: \"createModal\",\n    value: function createModal() {\n      var _this2 = this;\n\n      var book = this.props.data.book;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"rose\",\n        round: true,\n        onClick: function onClick() {\n          return _this2.handleClickOpen(\"modal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Modal\"), React.createElement(Dialog, {\n        classes: {\n          root: classes.center,\n          paper: classes.modal\n        },\n        open: this.state.modal,\n        TransitionComponent: Transition,\n        keepMounted: true,\n        onClose: function onClose() {\n          return _this2.handleClose(\"modal\");\n        },\n        \"aria-labelledby\": \"modal-slide-title\",\n        \"aria-describedby\": \"modal-slide-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"classic-modal-slide-title\",\n        disableTypography: true,\n        className: classes.modalHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        className: classes.modalCloseButton,\n        key: \"close\",\n        \"aria-label\": \"Close\",\n        color: \"inherit\",\n        onClick: function onClick() {\n          return _this2.handleClose(\"modal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Close, {\n        className: classes.modalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })), React.createElement(\"h4\", {\n        className: classes.modalTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Modal title\")), React.createElement(DialogContent, {\n        id: \"modal-slide-description\",\n        className: classes.modalBody,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Are you sure you want to do this?Are you sure you want to do this?Are you sure you want to do this?Are you sure you want to do this?Are you sure you want to do this?Are you sure you want to do this?Are you sure you want to do this?Are you sure you want to do this?Are you sure you want to do this?Are you sure you want to do this?Are you sure you want to do this?Are you sure you want to do this?Are you sure you want to do this?Are you sure you want to do this?Are you sure you want to do this?\")), React.createElement(DialogActions, {\n        className: classes.modalFooter + \" \" + classes.modalFooterCenter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.handleClose(\"modal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Never Mind\"), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.handleClose(\"modal\");\n        },\n        color: \"successNoBackground\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Yes\"))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Fragments, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, this.createModal());\n    }\n  }]);\n\n  return BookDetails;\n}(Component);\n\nexport default graphql(getBookQuery, {\n  options: function options(props) {\n    return {\n      variables: {\n        id: props.bookId\n      }\n    };\n  }\n})(BookDetails);","map":{"version":3,"sources":["C:\\Users\\barot\\Documents\\GitHub\\BookSTack\\src\\components\\BookDetails.js"],"names":["React","Component","Fragments","graphql","getBookQuery","withStyles","Slide","Dialog","DialogTitle","DialogContent","DialogActions","IconButton","Close","Button","modalStyle","Transition","props","BookDetails","state","modal","x","setState","book","data","bookId","title","genre","map","item","author","description","displayBookDetails","err","console","log","handleClickOpen","root","classes","center","paper","handleClose","modalHeader","modalCloseButton","modalClose","modalTitle","modalBody","modalFooter","modalFooterCenter","createModal","options","variables","id"],"mappings":"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","sourcesContent":["import React, { Component, Fragments } from 'react';\r\nimport { graphql } from 'react-apollo';\r\nimport { getBookQuery } from '../queries/queries';\r\n\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n// @material-ui/icons\r\nimport Close from \"@material-ui/icons/Close\";\r\n// core components\r\nimport Button from \"components/CustomButtons/Button.jsx\";\r\n\r\nimport modalStyle from \"assets/jss/material-dashboard-pro-react/modalStyle.jsx\";\r\n\r\nfunction Transition(props) {\r\n  return <Slide direction=\"down\" {...props} />;\r\n}\r\n\r\nclass BookDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false\r\n    };\r\n  }\r\n\r\n  handleClickOpen(modal) {\r\n    var x = [];\r\n    x[modal] = true;\r\n    this.setState(x);\r\n  }\r\n  handleClose(modal) {\r\n    var x = [];\r\n    x[modal] = false;\r\n    this.setState(x);\r\n  }\r\n\r\n    displayBookDetails(){\r\n        var book = this.props.data.book;\r\n\r\n\r\n          try{\r\n          if(this.props.bookId ){\r\n            return(\r\n                <div className=\"site-font\">\r\n                    <h2>{ book.title }</h2>\r\n\r\n                    <h4>genre : </h4>\r\n                      {book.genre!==null ?\r\n                        book.genre.map(item =>{return <p key=\"item1\">{ item }</p>}):\r\n                        <p key=\"item1\">no genre found</p>}\r\n\r\n                    <h4>author : </h4>\r\n                    {book.author!==null ?\r\n                       book.author.map(item => {return <p key=\"item2\">{ item }</p>}) :\r\n                        <p key=\"item2\">no detail about author</p>}\r\n\r\n                    <h4>description</h4>\r\n                    {book.description!==null ?\r\n                       <p key=\"item3\">{book.description}</p> :\r\n                       <p key=\"item3\"> no description</p> }\r\n\r\n                       //from final return next 3 lines\r\n                       <div id=\"book-details\">\r\n                           { this.displayBookDetails() }\r\n                       </div>\r\n                </div>\r\n            )\r\n          }\r\n      }\r\n      catch (err){\r\n        console.log(err);\r\n      }\r\n    }\r\n\r\n  createModal(){\r\n    var book = this.props.data.book;\r\n\r\n    return(\r\n      <div>\r\n       <Button\r\n         color=\"rose\"\r\n         round\r\n         onClick={() => this.handleClickOpen(\"modal\")}>\r\n         Modal\r\n       </Button>\r\n\r\n       <Dialog\r\n         classes={{\r\n           root: classes.center,\r\n           paper: classes.modal\r\n         }}\r\n         open={this.state.modal}\r\n         TransitionComponent={Transition}\r\n         keepMounted\r\n         onClose={() => this.handleClose(\"modal\")}\r\n         aria-labelledby=\"modal-slide-title\"\r\n         aria-describedby=\"modal-slide-description\">\r\n         <DialogTitle\r\n           id=\"classic-modal-slide-title\"\r\n           disableTypography\r\n           className={classes.modalHeader}>\r\n           <IconButton\r\n             className={classes.modalCloseButton}\r\n             key=\"close\"\r\n             aria-label=\"Close\"\r\n             color=\"inherit\"\r\n             onClick={() => this.handleClose(\"modal\")}>\r\n             <Close className={classes.modalClose} />\r\n           </IconButton>\r\n           <h4 className={classes.modalTitle}>Modal title</h4>\r\n         </DialogTitle>\r\n         <DialogContent\r\n           id=\"modal-slide-description\"\r\n           className={classes.modalBody}>\r\n           <h5>Are you sure you want to do this?Are you sure you want to do this?Are you sure you want to do this?Are you sure you want to do this?Are you sure you want to do this?Are you sure you want to do this?Are you sure you want to do this?Are you sure you want to do this?Are you sure you want to do this?Are you sure you want to do this?Are you sure you want to do this?Are you sure you want to do this?Are you sure you want to do this?Are you sure you want to do this?Are you sure you want to do this?</h5>\r\n         </DialogContent>\r\n         <DialogActions\r\n           className={classes.modalFooter +\" \" +classes.modalFooterCenter}>\r\n           <Button\r\n             onClick={() => this.handleClose(\"modal\")}\r\n           >\r\n             Never Mind\r\n           </Button>\r\n           <Button\r\n             onClick={() => this.handleClose(\"modal\")}\r\n             color=\"successNoBackground\">\r\n             Yes\r\n           </Button>\r\n         </DialogActions>\r\n       </Dialog>\r\n     </div>\r\n    )\r\n  }\r\n    render(){\r\n        return(\r\n          <Fragments>\r\n            {this.createModal()}\r\n          </Fragments>\r\n        );\r\n    }\r\n}\r\n\r\nexport default graphql(getBookQuery, {\r\n    options: (props) => {\r\n        return {\r\n            variables: {\r\n                id: props.bookId\r\n            }\r\n        }\r\n    }\r\n})(BookDetails);\r\n"]},"metadata":{},"sourceType":"module"}